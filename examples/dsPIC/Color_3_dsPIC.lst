;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 10/4/2016 4:54:34 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x0000000409B6  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
0x0100	0x000000  	0
0x0102	0x000000  	0
0x0104	0x000000  	0
0x0106	0x000000  	0
0x0108	0x000000  	0
0x010A	0x000000  	0
0x010C	0x000000  	0
0x010E	0x000000  	0
0x0110	0x000000  	0
0x0112	0x000000  	0
0x0114	0x000000  	0
0x0116	0x000000  	0
0x0118	0x000000  	0
0x011A	0x000000  	0
0x011C	0x000000  	0
0x011E	0x000000  	0
0x0120	0x000000  	0
0x0122	0x000000  	0
0x0124	0x000000  	0
0x0126	0x000000  	0
0x0128	0x000000  	0
0x012A	0x000000  	0
0x012C	0x000000  	0
0x012E	0x000000  	0
0x0130	0x000000  	0
0x0132	0x000000  	0
0x0134	0x000000  	0
0x0136	0x000000  	0
0x0138	0x000000  	0
0x013A	0x000000  	0
0x013C	0x000000  	0
0x013E	0x000000  	0
0x0140	0x000000  	0
0x0142	0x000000  	0
0x0144	0x000000  	0
0x0146	0x000000  	0
0x0148	0x000000  	0
0x014A	0x000000  	0
0x014C	0x000000  	0
0x014E	0x000000  	0
0x0150	0x000000  	0
0x0152	0x000000  	0
0x0154	0x000000  	0
0x0156	0x000000  	0
0x0158	0x000000  	0
0x015A	0x000000  	0
0x015C	0x000000  	0
0x015E	0x000000  	0
0x0160	0x000000  	0
0x0162	0x000000  	0
0x0164	0x000000  	0
0x0166	0x000000  	0
0x0168	0x000000  	0
0x016A	0x000000  	0
0x016C	0x000000  	0
0x016E	0x000000  	0
0x0170	0x000000  	0
0x0172	0x000000  	0
0x0174	0x000000  	0
0x0176	0x000000  	0
0x0178	0x000000  	0
0x017A	0x000000  	0
0x017C	0x000000  	0
0x017E	0x000000  	0
0x0180	0x000000  	0
0x0182	0x000000  	0
0x0184	0x000000  	0
0x0186	0x000000  	0
0x0188	0x000000  	0
0x018A	0x000000  	0
0x018C	0x000000  	0
0x018E	0x000000  	0
0x0190	0x000000  	0
0x0192	0x000000  	0
0x0194	0x000000  	0
0x0196	0x000000  	0
0x0198	0x000000  	0
0x019A	0x000000  	0
0x019C	0x000000  	0
0x019E	0x000000  	0
0x01A0	0x000000  	0
0x01A2	0x000000  	0
0x01A4	0x000000  	0
0x01A6	0x000000  	0
0x01A8	0x000000  	0
0x01AA	0x000000  	0
0x01AC	0x000000  	0
0x01AE	0x000000  	0
0x01B0	0x000000  	0
0x01B2	0x000000  	0
0x01B4	0x000000  	0
0x01B6	0x000000  	0
0x01B8	0x000000  	0
0x01BA	0x000000  	0
0x01BC	0x000000  	0
0x01BE	0x000000  	0
0x01C0	0x000000  	0
0x01C2	0x000000  	0
0x01C4	0x000000  	0
0x01C6	0x000000  	0
0x01C8	0x000000  	0
0x01CA	0x000000  	0
0x01CC	0x000000  	0
0x01CE	0x000000  	0
0x01D0	0x000000  	0
0x01D2	0x000000  	0
0x01D4	0x000000  	0
0x01D6	0x000000  	0
0x01D8	0x000000  	0
0x01DA	0x000000  	0
0x01DC	0x000000  	0
0x01DE	0x000000  	0
0x01E0	0x000000  	0
0x01E2	0x000000  	0
0x01E4	0x000000  	0
0x01E6	0x000000  	0
0x01E8	0x000000  	0
0x01EA	0x000000  	0
0x01EC	0x000000  	0
0x01EE	0x000000  	0
0x01F0	0x000000  	0
0x01F2	0x000000  	0
0x01F4	0x000000  	0
0x01F6	0x000000  	0
0x01F8	0x000000  	0
0x01FA	0x000000  	0
0x01FC	0x000000  	0
0x01FE	0x000000  	0
_main:
0x09B6	0x208A8F  	MOV	#2216, W15
0x09B8	0x27FFF0  	MOV	#32767, W0
0x09BA	0xB7A020  	MOV	WREG, SPLIM
0x09BC	0x200010  	MOV	#1, W0
0x09BE	0xB7A034  	MOV	WREG, PSVPAG
0x09C0	0x200040  	MOV	#4, W0
0x09C2	0xB72044  	IOR	CORCON
0x09C4	0xFA0028  	LNK	#40
0x09C6	0x000000020A8C  	CALL	2700
;Color_3_dsPIC.c,9 :: 		void main()
;Color_3_dsPIC.c,12 :: 		uint8_t id_buffer[6] = { 0 };
0x09CA	0x781F8A  	PUSH	W10
0x09CC	0x781F8B  	PUSH	W11
0x09CE	0x781F8C  	PUSH	W12
0x09D0	0x4700E8  	ADD	W14, #8, W1
0x09D2	0x281030  	MOV	#lo_addr(?ICSmain_id_buffer_L0), W0
0x09D4	0x090005  	REPEAT	#5
0x09D6	0x7858B0  	MOV.B	[W0++], [W1++]
;Color_3_dsPIC.c,13 :: 		uint8_t id_reg = 0x12;
; id_reg start address is: 4 (W2)
0x09D8	0xB3C122  	MOV.B	#18, W2
;Color_3_dsPIC.c,14 :: 		uint8_t uart_text[25] = { 0 };
0x09DA	0x4700EE  	ADD	W14, #14, W1
0x09DC	0x280930  	MOV	#lo_addr(?ICSmain_uart_text_L0), W0
0x09DE	0x090018  	REPEAT	#24
0x09E0	0x7858B0  	MOV.B	[W0++], [W1++]
;Color_3_dsPIC.c,18 :: 		system_setup();
0x09E2	0x781F82  	PUSH	W2
0x09E4	0x07FF6A  	RCALL	_system_setup
0x09E6	0x78014F  	POP	W2
;Color_3_dsPIC.c,21 :: 		UART2_Write_Text( "Device ID:  " );
0x09E8	0x20810A  	MOV	#lo_addr(?lstr1_Color_3_dsPIC), W10
0x09EA	0x07FE38  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,22 :: 		color_3_hal_read( id_buffer, id_reg, 1 );
0x09EC	0x470068  	ADD	W14, #8, W0
0x09EE	0xB3C01C  	MOV.B	#1, W12
0x09F0	0x784582  	MOV.B	W2, W11
; id_reg end address is: 4 (W2)
0x09F2	0x780500  	MOV	W0, W10
0x09F4	0x07FF88  	RCALL	_color_3_hal_read
;Color_3_dsPIC.c,23 :: 		IntToHex( id_buffer[0], uart_text );
0x09F6	0x4700EE  	ADD	W14, #14, W1
0x09F8	0x470068  	ADD	W14, #8, W0
0x09FA	0x780581  	MOV	W1, W11
0x09FC	0xFB8510  	ZE	[W0], W10
0x09FE	0x07FF36  	RCALL	_IntToHex
;Color_3_dsPIC.c,24 :: 		UART2_Write_Text( uart_text );
0x0A00	0x47006E  	ADD	W14, #14, W0
0x0A02	0x780500  	MOV	W0, W10
0x0A04	0x07FE2B  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,25 :: 		UART2_Write_Text( "\r\n\r\n\r\n" );
0x0A06	0x20866A  	MOV	#lo_addr(?lstr2_Color_3_dsPIC), W10
0x0A08	0x07FE29  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,26 :: 		Delay_ms(1000);
0x0A0A	0x200158  	MOV	#21, W8
0x0A0C	0x2585B7  	MOV	#22619, W7
L_main0:
0x0A0E	0xED200E  	DEC	W7
0x0A10	0x3AFFFE  	BRA NZ	L_main0
0x0A12	0xED2010  	DEC	W8
0x0A14	0x3AFFFC  	BRA NZ	L_main0
;Color_3_dsPIC.c,28 :: 		while(1)
L_main2:
;Color_3_dsPIC.c,30 :: 		color_3_get_rgb_data( &my_color );
0x0A16	0x470060  	ADD	W14, #0, W0
0x0A18	0x780500  	MOV	W0, W10
0x0A1A	0x07FECE  	RCALL	_color_3_get_rgb_data
;Color_3_dsPIC.c,32 :: 		UART2_Write_Text( "Clear Data: " );
0x0A1C	0x2081DA  	MOV	#lo_addr(?lstr3_Color_3_dsPIC), W10
0x0A1E	0x07FE1E  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,33 :: 		IntToStr( my_color.clear_data, uart_text );
0x0A20	0x47006E  	ADD	W14, #14, W0
0x0A22	0x780580  	MOV	W0, W11
0x0A24	0x90050E  	MOV	[W14+0], W10
0x0A26	0x07FEFA  	RCALL	_IntToStr
;Color_3_dsPIC.c,34 :: 		UART2_Write_Text( uart_text );
0x0A28	0x47006E  	ADD	W14, #14, W0
0x0A2A	0x780500  	MOV	W0, W10
0x0A2C	0x07FE17  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,35 :: 		UART2_Write_Text( "\r\n" );
0x0A2E	0x2080DA  	MOV	#lo_addr(?lstr4_Color_3_dsPIC), W10
0x0A30	0x07FE15  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,37 :: 		UART2_Write_Text( "Red Data:   " );
0x0A32	0x20800A  	MOV	#lo_addr(?lstr5_Color_3_dsPIC), W10
0x0A34	0x07FE13  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,38 :: 		IntToStr( my_color.red_data, uart_text );
0x0A36	0x47006E  	ADD	W14, #14, W0
0x0A38	0x780580  	MOV	W0, W11
0x0A3A	0x90051E  	MOV	[W14+2], W10
0x0A3C	0x07FEEF  	RCALL	_IntToStr
;Color_3_dsPIC.c,39 :: 		UART2_Write_Text( uart_text );
0x0A3E	0x47006E  	ADD	W14, #14, W0
0x0A40	0x780500  	MOV	W0, W10
0x0A42	0x07FE0C  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,40 :: 		UART2_Write_Text( "\r\n" );
0x0A44	0x2088DA  	MOV	#lo_addr(?lstr6_Color_3_dsPIC), W10
0x0A46	0x07FE0A  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,42 :: 		UART2_Write_Text( "Green Data: " );
0x0A48	0x2086EA  	MOV	#lo_addr(?lstr7_Color_3_dsPIC), W10
0x0A4A	0x07FE08  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,43 :: 		IntToStr( my_color.green_data, uart_text );
0x0A4C	0x47006E  	ADD	W14, #14, W0
0x0A4E	0x780580  	MOV	W0, W11
0x0A50	0x90052E  	MOV	[W14+4], W10
0x0A52	0x07FEE4  	RCALL	_IntToStr
;Color_3_dsPIC.c,44 :: 		UART2_Write_Text( uart_text );
0x0A54	0x47006E  	ADD	W14, #14, W0
0x0A56	0x780500  	MOV	W0, W10
0x0A58	0x07FE01  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,45 :: 		UART2_Write_Text( "\r\n" );
0x0A5A	0x20890A  	MOV	#lo_addr(?lstr8_Color_3_dsPIC), W10
0x0A5C	0x07FDFF  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,47 :: 		UART2_Write_Text( "Blue Data:  " );
0x0A5E	0x20880A  	MOV	#lo_addr(?lstr9_Color_3_dsPIC), W10
0x0A60	0x07FDFD  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,48 :: 		IntToStr( my_color.blue_data, uart_text );
0x0A62	0x47006E  	ADD	W14, #14, W0
0x0A64	0x780580  	MOV	W0, W11
0x0A66	0x90053E  	MOV	[W14+6], W10
0x0A68	0x07FED9  	RCALL	_IntToStr
;Color_3_dsPIC.c,49 :: 		UART2_Write_Text( uart_text );
0x0A6A	0x47006E  	ADD	W14, #14, W0
0x0A6C	0x780500  	MOV	W0, W10
0x0A6E	0x07FDF6  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,50 :: 		UART2_Write_Text( "\r\n" );
0x0A70	0x2087DA  	MOV	#lo_addr(?lstr10_Color_3_dsPIC), W10
0x0A72	0x07FDF4  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,52 :: 		Delay_ms(1000);
0x0A74	0x200158  	MOV	#21, W8
0x0A76	0x2585B7  	MOV	#22619, W7
L_main4:
0x0A78	0xED200E  	DEC	W7
0x0A7A	0x3AFFFE  	BRA NZ	L_main4
0x0A7C	0xED2010  	DEC	W8
0x0A7E	0x3AFFFC  	BRA NZ	L_main4
;Color_3_dsPIC.c,53 :: 		}
0x0A80	0x37FFCA  	BRA	L_main2
;Color_3_dsPIC.c,54 :: 		}
L_end_main:
0x0A82	0x78064F  	POP	W12
0x0A84	0x7805CF  	POP	W11
0x0A86	0x78054F  	POP	W10
0x0A88	0xFA8000  	ULNK
L__main_end_loop:
0x0A8A	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_system_setup:
;Color_3_dsPIC.c,56 :: 		void system_setup( void )
;Color_3_dsPIC.c,70 :: 		UART2_Init( 9600 );
0x08BA	0x781F8A  	PUSH	W10
0x08BC	0x781F8B  	PUSH	W11
0x08BE	0x22580A  	MOV	#9600, W10
0x08C0	0x20000B  	MOV	#0, W11
0x08C2	0x07FE10  	RCALL	_UART2_Init
;Color_3_dsPIC.c,71 :: 		Delay_ms(300);
0x08C4	0x200078  	MOV	#7, W8
0x08C6	0x21A817  	MOV	#6785, W7
L_system_setup6:
0x08C8	0xED200E  	DEC	W7
0x08CA	0x3AFFFE  	BRA NZ	L_system_setup6
0x08CC	0xED2010  	DEC	W8
0x08CE	0x3AFFFC  	BRA NZ	L_system_setup6
;Color_3_dsPIC.c,72 :: 		UART2_Write_Text( "UART Initialized\r\n" );
0x08D0	0x20852A  	MOV	#lo_addr(?lstr11_Color_3_dsPIC), W10
0x08D2	0x07FEC4  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,75 :: 		I2C2_Init( 100000 );
0x08D4	0x286A0A  	MOV	#34464, W10
0x08D6	0x20001B  	MOV	#1, W11
0x08D8	0x07FED2  	RCALL	_I2C2_Init
;Color_3_dsPIC.c,76 :: 		Delay_ms(500);
0x08DA	0x2000B8  	MOV	#11, W8
0x08DC	0x22C2D7  	MOV	#11309, W7
L_system_setup8:
0x08DE	0xED200E  	DEC	W7
0x08E0	0x3AFFFE  	BRA NZ	L_system_setup8
0x08E2	0xED2010  	DEC	W8
0x08E4	0x3AFFFC  	BRA NZ	L_system_setup8
;Color_3_dsPIC.c,77 :: 		UART2_Write_Text( "I2C Initialized\r\n" );
0x08E6	0x2082AA  	MOV	#lo_addr(?lstr12_Color_3_dsPIC), W10
0x08E8	0x07FEB9  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,79 :: 		color_3_init( _i2c_address );
0x08EA	0x208650  	MOV	#lo_addr(__i2c_address), W0
0x08EC	0x784510  	MOV.B	[W0], W10
0x08EE	0x07FEEA  	RCALL	_color_3_init
;Color_3_dsPIC.c,80 :: 		Delay_ms(300);
0x08F0	0x200078  	MOV	#7, W8
0x08F2	0x21A817  	MOV	#6785, W7
L_system_setup10:
0x08F4	0xED200E  	DEC	W7
0x08F6	0x3AFFFE  	BRA NZ	L_system_setup10
0x08F8	0xED2010  	DEC	W8
0x08FA	0x3AFFFC  	BRA NZ	L_system_setup10
;Color_3_dsPIC.c,82 :: 		UART2_Write_Text( "Color 3 Initialized\r\n" );
0x08FC	0x2083CA  	MOV	#lo_addr(?lstr13_Color_3_dsPIC), W10
0x08FE	0x07FEAE  	RCALL	_UART2_Write_Text
;Color_3_dsPIC.c,83 :: 		}
L_end_system_setup:
0x0900	0x7805CF  	POP	W11
0x0902	0x78054F  	POP	W10
0x0904	0x060000  	RETURN
; end of _system_setup
_UART2_Init:
0x04E4	0xFA0008  	LNK	#8
;__Lib_UART_12_p24_p33.c,380 :: 		
;__Lib_UART_12_p24_p33.c,383 :: 		
0x04E6	0x204D60  	MOV	#lo_addr(_UART2_Write), W0
0x04E8	0x8844A0  	MOV	W0, _UART_Wr_Ptr
;__Lib_UART_12_p24_p33.c,384 :: 		
0x04EA	0x203000  	MOV	#lo_addr(_UART2_Read), W0
0x04EC	0x8844C0  	MOV	W0, _UART_Rd_Ptr
;__Lib_UART_12_p24_p33.c,385 :: 		
0x04EE	0x2030C0  	MOV	#lo_addr(_UART2_Data_Ready), W0
0x04F0	0x8844B0  	MOV	W0, _UART_Rdy_Ptr
;__Lib_UART_12_p24_p33.c,386 :: 		
0x04F2	0x203160  	MOV	#lo_addr(_UART2_Tx_Idle), W0
0x04F4	0x8844D0  	MOV	W0, _UART_Tx_Idle_Ptr
;__Lib_UART_12_p24_p33.c,391 :: 		
0x04F6	0xEF2230  	CLR	U2MODE
;__Lib_UART_12_p24_p33.c,392 :: 		
0x04F8	0x280000  	MOV	#32768, W0
0x04FA	0xB7A232  	MOV	WREG, U2STA
;__Lib_UART_12_p24_p33.c,396 :: 		
0x04FC	0xA96230  	BCLR	U2MODE, #3
;__Lib_UART_12_p24_p33.c,397 :: 		
0x04FE	0x07FFD1  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x0500	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,399 :: 		
0x0502	0x203E80  	MOV	#1000, W0
0x0504	0x200001  	MOV	#0, W1
0x0506	0x07FF6F  	RCALL	__Multiply_32x32
0x0508	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,401 :: 		
0x050A	0x07FFCE  	RCALL	_Get_Fosc_Per_Cyc
0x050C	0xDE0041  	LSR	W0, #1, W0
0x050E	0x400064  	ADD	W0, #4, W0
0x0510	0x780080  	MOV	W0, W1
0x0512	0x470060  	ADD	W14, #0, W0
0x0514	0xBE880A  	MOV.D	W10, [W0]
L__UART2_Init120:
0x0516	0xE90081  	DEC	W1, W1
0x0518	0x350003  	BRA LT	L__UART2_Init121
0x051A	0xD01810  	SL	[W0], [W0++]
0x051C	0xD29010  	RLC	[W0], [W0--]
0x051E	0x37FFFB  	BRA	L__UART2_Init120
L__UART2_Init121:
;__Lib_UART_12_p24_p33.c,403 :: 		
0x0520	0xBE9F82  	PUSH.D	W2
0x0522	0xBE9F8A  	PUSH.D	W10
0x0524	0xBE0002  	MOV.D	W2, W0
0x0526	0x90010E  	MOV	[W14+0], W2
0x0528	0x90019E  	MOV	[W14+2], W3
0x052A	0xEB0200  	CLR	W4
0x052C	0x07FF65  	RCALL	__Modulus_32x32
0x052E	0xBE054F  	POP.D	W10
0x0530	0xBE014F  	POP.D	W2
0x0532	0x980720  	MOV	W0, [W14+4]
0x0534	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p24_p33.c,404 :: 		
0x0536	0xBE9F8A  	PUSH.D	W10
; tmp end address is: 4 (W2)
0x0538	0xBE0002  	MOV.D	W2, W0
0x053A	0x90010E  	MOV	[W14+0], W2
0x053C	0x90019E  	MOV	[W14+2], W3
0x053E	0xEB0200  	CLR	W4
0x0540	0x07FF87  	RCALL	__Divide_32x32
0x0542	0xBE054F  	POP.D	W10
; tmp start address is: 6 (W3)
0x0544	0x780180  	MOV	W0, W3
0x0546	0x780201  	MOV	W1, W4
;__Lib_UART_12_p24_p33.c,406 :: 		
0x0548	0x470060  	ADD	W14, #0, W0
0x054A	0xD10150  	LSR	[++W0], W2
0x054C	0xD380C0  	RRC	[--W0], W1
0x054E	0x470064  	ADD	W14, #4, W0
0x0550	0xE10830  	CP	W1, [W0++]
0x0552	0xE19020  	CPB	W2, [W0--]
0x0554	0x310007  	BRA GEU	L__UART2_Init66
L__UART2_Init122:
;__Lib_UART_12_p24_p33.c,407 :: 		
0x0556	0x418061  	ADD	W3, #1, W0
0x0558	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
; tmp start address is: 10 (W5)
0x055A	0x780280  	MOV	W0, W5
0x055C	0x780301  	MOV	W1, W6
; tmp end address is: 10 (W5)
0x055E	0x780105  	MOV	W5, W2
0x0560	0x780186  	MOV	W6, W3
0x0562	0x370002  	BRA	L_UART2_Init38
L__UART2_Init66:
;__Lib_UART_12_p24_p33.c,406 :: 		
0x0564	0x780103  	MOV	W3, W2
0x0566	0x780184  	MOV	W4, W3
;__Lib_UART_12_p24_p33.c,407 :: 		
L_UART2_Init38:
;__Lib_UART_12_p24_p33.c,410 :: 		
; tmp start address is: 4 (W2)
0x0568	0x718002  	IOR	W3, W2, W0
0x056A	0x3A0033  	BRA NZ	L__UART2_Init68
L__UART2_Init123:
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,412 :: 		
0x056C	0x07FF9A  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x056E	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,414 :: 		
0x0570	0x203E80  	MOV	#1000, W0
0x0572	0x200001  	MOV	#0, W1
0x0574	0x07FF38  	RCALL	__Multiply_32x32
0x0576	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,416 :: 		
0x0578	0x07FF97  	RCALL	_Get_Fosc_Per_Cyc
0x057A	0xDE0041  	LSR	W0, #1, W0
0x057C	0xECA000  	INC2	W0
0x057E	0x780080  	MOV	W0, W1
0x0580	0x470060  	ADD	W14, #0, W0
0x0582	0xBE880A  	MOV.D	W10, [W0]
L__UART2_Init124:
0x0584	0xE90081  	DEC	W1, W1
0x0586	0x350003  	BRA LT	L__UART2_Init125
0x0588	0xD01810  	SL	[W0], [W0++]
0x058A	0xD29010  	RLC	[W0], [W0--]
0x058C	0x37FFFB  	BRA	L__UART2_Init124
L__UART2_Init125:
;__Lib_UART_12_p24_p33.c,418 :: 		
0x058E	0xBE9F82  	PUSH.D	W2
0x0590	0xBE0002  	MOV.D	W2, W0
0x0592	0x90010E  	MOV	[W14+0], W2
0x0594	0x90019E  	MOV	[W14+2], W3
0x0596	0xEB0200  	CLR	W4
0x0598	0x07FF2F  	RCALL	__Modulus_32x32
0x059A	0xBE014F  	POP.D	W2
0x059C	0x980720  	MOV	W0, [W14+4]
0x059E	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p24_p33.c,419 :: 		
0x05A0	0xBE0002  	MOV.D	W2, W0
0x05A2	0x90010E  	MOV	[W14+0], W2
0x05A4	0x90019E  	MOV	[W14+2], W3
0x05A6	0xEB0200  	CLR	W4
0x05A8	0x07FF53  	RCALL	__Divide_32x32
; tmp end address is: 4 (W2)
; tmp start address is: 6 (W3)
0x05AA	0x780180  	MOV	W0, W3
0x05AC	0x780201  	MOV	W1, W4
;__Lib_UART_12_p24_p33.c,421 :: 		
0x05AE	0x470060  	ADD	W14, #0, W0
0x05B0	0xD10150  	LSR	[++W0], W2
0x05B2	0xD380C0  	RRC	[--W0], W1
0x05B4	0x470064  	ADD	W14, #4, W0
0x05B6	0xE10830  	CP	W1, [W0++]
0x05B8	0xE19020  	CPB	W2, [W0--]
0x05BA	0x310007  	BRA GEU	L__UART2_Init67
L__UART2_Init126:
;__Lib_UART_12_p24_p33.c,422 :: 		
0x05BC	0x418061  	ADD	W3, #1, W0
0x05BE	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
; tmp start address is: 10 (W5)
0x05C0	0x780280  	MOV	W0, W5
0x05C2	0x780301  	MOV	W1, W6
; tmp end address is: 10 (W5)
0x05C4	0x780105  	MOV	W5, W2
0x05C6	0x780186  	MOV	W6, W3
0x05C8	0x370002  	BRA	L_UART2_Init40
L__UART2_Init67:
;__Lib_UART_12_p24_p33.c,421 :: 		
0x05CA	0x780103  	MOV	W3, W2
0x05CC	0x780184  	MOV	W4, W3
;__Lib_UART_12_p24_p33.c,422 :: 		
L_UART2_Init40:
;__Lib_UART_12_p24_p33.c,424 :: 		
; tmp start address is: 4 (W2)
0x05CE	0xA86230  	BSET	U2MODE, #3
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,425 :: 		
0x05D0	0x370000  	BRA	L_UART2_Init39
L__UART2_Init68:
;__Lib_UART_12_p24_p33.c,410 :: 		
;__Lib_UART_12_p24_p33.c,425 :: 		
L_UART2_Init39:
;__Lib_UART_12_p24_p33.c,427 :: 		
; tmp start address is: 4 (W2)
0x05D2	0x510061  	SUB	W2, #1, W0
0x05D4	0x5980E0  	SUBB	W3, #0, W1
; tmp end address is: 4 (W2)
; tmp start address is: 0 (W0)
0x05D6	0x8811C0  	MOV	W0, U2BRG
; tmp end address is: 0 (W0)
;__Lib_UART_12_p24_p33.c,430 :: 		
0x05D8	0xA92232  	BCLR	U2STA, #1
;__Lib_UART_12_p24_p33.c,432 :: 		
0x05DA	0xA8E231  	BSET	U2MODE, #15
;__Lib_UART_12_p24_p33.c,433 :: 		
0x05DC	0xA84233  	BSET	U2STA, #10
;__Lib_UART_12_p24_p33.c,435 :: 		
0x05DE	0x07FF66  	RCALL	_Delay_100ms
0x05E0	0x07FF65  	RCALL	_Delay_100ms
;__Lib_UART_12_p24_p33.c,437 :: 		
L_end_UART2_Init:
0x05E2	0xFA8000  	ULNK
0x05E4	0x060000  	RETURN
; end of _UART2_Init
_Get_Fosc_kHz:
;__Lib_Delays.c,38 :: 		unsigned long Get_Fosc_kHz() {
;__Lib_Delays.c,39 :: 		return Clock_kHz();
0x04A2	0x21F400  	MOV	#8000, W0
0x04A4	0x200001  	MOV	#0, W1
;__Lib_Delays.c,40 :: 		}
L_end_Get_Fosc_kHz:
0x04A6	0x060000  	RETURN
; end of _Get_Fosc_kHz
_Get_Fosc_Per_Cyc:
;__Lib_Delays.c,63 :: 		unsigned int Get_Fosc_Per_Cyc() {
;__Lib_Delays.c,64 :: 		return __FOSC_PER_CYC;
0x04A8	0x200020  	MOV	#2, W0
;__Lib_Delays.c,65 :: 		}
L_end_Get_Fosc_Per_Cyc:
0x04AA	0x060000  	RETURN
; end of _Get_Fosc_Per_Cyc
_Delay_100ms:
;__Lib_Delays.c,666 :: 		void Delay_100ms()
;__Lib_Delays.c,668 :: 		Delay_ms(100);
0x04AC	0x200028  	MOV	#2, W8
0x04AE	0x238807  	MOV	#14464, W7
L_Delay_100ms31:
0x04B0	0xED200E  	DEC	W7
0x04B2	0x3AFFFE  	BRA NZ	L_Delay_100ms31
0x04B4	0xED2010  	DEC	W8
0x04B6	0x3AFFFC  	BRA NZ	L_Delay_100ms31
0x04B8	0x000000  	NOP
0x04BA	0x000000  	NOP
;__Lib_Delays.c,669 :: 		}
L_end_Delay_100ms:
0x04BC	0x060000  	RETURN
; end of _Delay_100ms
__Multiply_32x32:
0x03E6	0xFA0000  	LNK	#0
;__Lib_Math.c,43 :: 		
;__Lib_Math.c,46 :: 		
0x03E8	0xB80A02  	MUL.UU	W1, W2, W4
;__Lib_Math.c,47 :: 		
0x03EA	0x880050  	MOV	W0, W5
;__Lib_Math.c,48 :: 		
0x03EC	0xB80002  	MUL.UU	W0, W2, W0
;__Lib_Math.c,49 :: 		
0x03EE	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,50 :: 		
0x03F0	0xB82A03  	MUL.UU	W5, W3, W4
;__Lib_Math.c,51 :: 		
0x03F2	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,54 :: 		
L_end__Multiply_32x32:
0x03F4	0xFA8000  	ULNK
0x03F6	0x060000  	RETURN
; end of __Multiply_32x32
__Modulus_32x32:
0x03F8	0xFA0000  	LNK	#0
;__Lib_Math.c,162 :: 		
;__Lib_Math.c,164 :: 		
0x03FA	0x070002  	RCALL	Modulus_32x32___testsus
;__Lib_Math.c,166 :: 		
0x03FC	0x00000004044C  	GOTO	the_end_Modulus_32x32
;__Lib_Math.c,171 :: 		
Modulus_32x32___testsus:
;__Lib_Math.c,172 :: 		
0x0400	0xE20008  	CP0	W4
;__Lib_Math.c,173 :: 		
0x0402	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
;__Lib_Math.c,175 :: 		
0x0404	0x070010  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,176 :: 		
0x0406	0x060000  	RETURN
;__Lib_Math.c,178 :: 		
Modulus_32x32___modsi3:
;__Lib_Math.c,179 :: 		
0x0408	0x781F81  	MOV	W1, [W15++]
;__Lib_Math.c,180 :: 		
0x040A	0xE20002  	CP0	W1
;__Lib_Math.c,181 :: 		
0x040C	0x3D0002  	BRA GE	Modulus_32x32_modtestb
;__Lib_Math.c,182 :: 		
0x040E	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,183 :: 		
0x0410	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,184 :: 		
Modulus_32x32_modtestb:
;__Lib_Math.c,185 :: 		
0x0412	0xE20006  	CP0	W3
;__Lib_Math.c,186 :: 		
0x0414	0x3D0002  	BRA GE	Modulus_32x32_calcrem
;__Lib_Math.c,187 :: 		
0x0416	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,188 :: 		
0x0418	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,189 :: 		
Modulus_32x32_calcrem:
;__Lib_Math.c,190 :: 		
0x041A	0x070005  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,191 :: 		
0x041C	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,192 :: 		
0x041E	0x3B0002  	BRA NN	Modulus_32x32_exitr
;__Lib_Math.c,193 :: 		
0x0420	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,194 :: 		
0x0422	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,195 :: 		
Modulus_32x32_exitr:
;__Lib_Math.c,196 :: 		
0x0424	0x060000  	RETURN
;__Lib_Math.c,197 :: 		
Modulus_32x32___umodsi3:
;__Lib_Math.c,198 :: 		
0x0426	0x070002  	RCALL	Modulus_32x32___udivsi3
;__Lib_Math.c,199 :: 		
0x0428	0xBE8004  	MOV.D	W4, W0
;__Lib_Math.c,200 :: 		
0x042A	0x060000  	RETURN
;__Lib_Math.c,201 :: 		
Modulus_32x32___udivsi3:
;__Lib_Math.c,202 :: 		
0x042C	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,203 :: 		
0x042E	0x200206  	MOV	#32, W6
;__Lib_Math.c,204 :: 		
Modulus_32x32_nextbit:
;__Lib_Math.c,205 :: 		
0x0430	0xD00000  	SL	W0, W0
;__Lib_Math.c,206 :: 		
0x0432	0xD28081  	RLC	W1, W1
;__Lib_Math.c,207 :: 		
0x0434	0xD28204  	RLC	W4, W4
;__Lib_Math.c,208 :: 		
0x0436	0xD28285  	RLC	W5, W5
;__Lib_Math.c,209 :: 		
0x0438	0xA80000  	BSET	W0, #0
;__Lib_Math.c,210 :: 		
0x043A	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,211 :: 		
0x043C	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,212 :: 		
0x043E	0x3B0003  	BRA NN	Modulus_32x32_iterate
;__Lib_Math.c,213 :: 		
0x0440	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,214 :: 		
0x0442	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,215 :: 		
0x0444	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,216 :: 		
Modulus_32x32_iterate:
;__Lib_Math.c,217 :: 		
0x0446	0xE90306  	DEC	W6, W6
;__Lib_Math.c,218 :: 		
0x0448	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
;__Lib_Math.c,219 :: 		
0x044A	0x060000  	RETURN
;__Lib_Math.c,222 :: 		
the_end_Modulus_32x32:
;__Lib_Math.c,225 :: 		
L_end__Modulus_32x32:
0x044C	0xFA8000  	ULNK
0x044E	0x060000  	RETURN
; end of __Modulus_32x32
__Divide_32x32:
0x0450	0xFA0000  	LNK	#0
;__Lib_Math.c,78 :: 		
;__Lib_Math.c,81 :: 		
0x0452	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.c,83 :: 		
0x0454	0x00000004049E  	GOTO	the_end_Divide_32x32
;__Lib_Math.c,88 :: 		
Divide_32x32___testsus:
;__Lib_Math.c,89 :: 		
0x0458	0xE20008  	CP0	W4
;__Lib_Math.c,90 :: 		
0x045A	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.c,92 :: 		
0x045C	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,93 :: 		
0x045E	0x060000  	RETURN
;__Lib_Math.c,95 :: 		
Divide_32x32___divsi3:
;__Lib_Math.c,96 :: 		
0x0460	0x689F83  	XOR	W1, W3, [W15++]
;__Lib_Math.c,97 :: 		
0x0462	0xE20002  	CP0	W1
;__Lib_Math.c,98 :: 		
0x0464	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.c,99 :: 		
0x0466	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,100 :: 		
0x0468	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,101 :: 		
Divide_32x32_divtestb:
;__Lib_Math.c,102 :: 		
0x046A	0xE20006  	CP0	W3
;__Lib_Math.c,103 :: 		
0x046C	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.c,104 :: 		
0x046E	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,105 :: 		
0x0470	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,106 :: 		
Divide_32x32_calcquot:
;__Lib_Math.c,107 :: 		
0x0472	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,108 :: 		
0x0474	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,109 :: 		
0x0476	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.c,110 :: 		
0x0478	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,111 :: 		
0x047A	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,112 :: 		
Divide_32x32_returnq:
;__Lib_Math.c,113 :: 		
0x047C	0x060000  	RETURN
;__Lib_Math.c,114 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.c,115 :: 		
0x047E	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,116 :: 		
0x0480	0x200206  	MOV	#32, W6
;__Lib_Math.c,117 :: 		
Divide_32x32_nextbit:
;__Lib_Math.c,118 :: 		
0x0482	0xD00000  	SL	W0, W0
;__Lib_Math.c,119 :: 		
0x0484	0xD28081  	RLC	W1, W1
;__Lib_Math.c,120 :: 		
0x0486	0xD28204  	RLC	W4, W4
;__Lib_Math.c,121 :: 		
0x0488	0xD28285  	RLC	W5, W5
;__Lib_Math.c,122 :: 		
0x048A	0xA80000  	BSET	W0, #0
;__Lib_Math.c,123 :: 		
0x048C	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,124 :: 		
0x048E	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,125 :: 		
0x0490	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.c,126 :: 		
0x0492	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,127 :: 		
0x0494	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,128 :: 		
0x0496	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,129 :: 		
Divide_32x32_iterate:
;__Lib_Math.c,130 :: 		
0x0498	0xE90306  	DEC	W6, W6
;__Lib_Math.c,131 :: 		
0x049A	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.c,132 :: 		
0x049C	0x060000  	RETURN
;__Lib_Math.c,135 :: 		
the_end_Divide_32x32:
;__Lib_Math.c,138 :: 		
L_end__Divide_32x32:
0x049E	0xFA8000  	ULNK
0x04A0	0x060000  	RETURN
; end of __Divide_32x32
_UART2_Write_Text:
0x065C	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,311 :: 		
;__Lib_UART_12_p24_p33.c,312 :: 		
; counter start address is: 2 (W1)
0x065E	0xEF2002  	CLR	W1
;__Lib_UART_12_p24_p33.c,314 :: 		
; data_ start address is: 0 (W0)
0x0660	0x78401A  	MOV.B	[W10], W0
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
;__Lib_UART_12_p24_p33.c,315 :: 		
L_UART2_Write_Text27:
; data_ start address is: 0 (W0)
; counter start address is: 2 (W1)
0x0662	0xE10460  	CP.B	W0, #0
0x0664	0x32000A  	BRA Z	L_UART2_Write_Text28
L__UART2_Write_Text108:
;__Lib_UART_12_p24_p33.c,316 :: 		
0x0666	0x781F8A  	PUSH	W10
; data_ end address is: 0 (W0)
0x0668	0xFB8500  	ZE	W0, W10
0x066A	0x07FF35  	RCALL	_UART2_Write
0x066C	0x78054F  	POP	W10
;__Lib_UART_12_p24_p33.c,317 :: 		
0x066E	0x40C061  	ADD.B	W1, #1, W0
0x0670	0x784080  	MOV.B	W0, W1
;__Lib_UART_12_p24_p33.c,318 :: 		
0x0672	0xFB8000  	ZE	W0, W0
0x0674	0x450000  	ADD	W10, W0, W0
; data_ start address is: 0 (W0)
0x0676	0x784010  	MOV.B	[W0], W0
;__Lib_UART_12_p24_p33.c,319 :: 		
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
0x0678	0x37FFF4  	BRA	L_UART2_Write_Text27
L_UART2_Write_Text28:
;__Lib_UART_12_p24_p33.c,320 :: 		
L_end_UART2_Write_Text:
0x067A	0xFA8000  	ULNK
0x067C	0x060000  	RETURN
; end of _UART2_Write_Text
_UART2_Write:
0x04D6	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,305 :: 		
;__Lib_UART_12_p24_p33.c,306 :: 		
L_UART2_Write25:
0x04D8	0xAF0233  	BTSC	U2STA, #8
0x04DA	0x370001  	BRA	L_UART2_Write26
0x04DC	0x37FFFD  	BRA	L_UART2_Write25
L_UART2_Write26:
;__Lib_UART_12_p24_p33.c,307 :: 		
0x04DE	0x8811AA  	MOV	W10, U2TXREG
;__Lib_UART_12_p24_p33.c,308 :: 		
L_end_UART2_Write:
0x04E0	0xFA8000  	ULNK
0x04E2	0x060000  	RETURN
; end of _UART2_Write
_I2C2_Init:
0x067E	0xFA0004  	LNK	#4
;__Lib_I2C_12_p24_p33.c,297 :: 		
;__Lib_I2C_12_p24_p33.c,305 :: 		
0x0680	0x07FF10  	RCALL	_Get_Fosc_kHz
0x0682	0x201F42  	MOV	#500, W2
0x0684	0x200003  	MOV	#0, W3
0x0686	0x07FEAF  	RCALL	__Multiply_32x32
; fcy start address is: 4 (W2)
0x0688	0xBE0100  	MOV.D	W0, W2
;__Lib_I2C_12_p24_p33.c,306 :: 		
0x068A	0xBE9F82  	PUSH.D	W2
0x068C	0xBE9F8A  	PUSH.D	W10
0x068E	0xBE0002  	MOV.D	W2, W0
0x0690	0x296802  	MOV	#38528, W2
0x0692	0x200983  	MOV	#152, W3
0x0694	0xEB0200  	CLR	W4
0x0696	0x07FEDC  	RCALL	__Divide_32x32
0x0698	0xBE054F  	POP.D	W10
0x069A	0xBE014F  	POP.D	W2
0x069C	0x980700  	MOV	W0, [W14+0]
0x069E	0x980711  	MOV	W1, [W14+2]
;__Lib_I2C_12_p24_p33.c,307 :: 		
0x06A0	0xBE0002  	MOV.D	W2, W0
0x06A2	0xBE010A  	MOV.D	W10, W2
0x06A4	0xEB0200  	CLR	W4
0x06A6	0x07FED4  	RCALL	__Divide_32x32
0x06A8	0xBE0100  	MOV.D	W0, W2
;__Lib_I2C_12_p24_p33.c,308 :: 		
0x06AA	0x470060  	ADD	W14, #0, W0
0x06AC	0x510130  	SUB	W2, [W0++], W2
0x06AE	0x5981A0  	SUBB	W3, [W0--], W3
0x06B0	0x510061  	SUB	W2, #1, W0
0x06B2	0x5980E0  	SUBB	W3, #0, W1
; fcy end address is: 4 (W2)
; fcy start address is: 0 (W0)
;__Lib_I2C_12_p24_p33.c,310 :: 		
0x06B4	0x8810A0  	MOV	W0, I2C2BRG
; fcy end address is: 0 (W0)
;__Lib_I2C_12_p24_p33.c,311 :: 		
0x06B6	0xA8E217  	BSET	I2C2CON, #15
;__Lib_I2C_12_p24_p33.c,312 :: 		
0x06B8	0x07FEF9  	RCALL	_Delay_100ms
;__Lib_I2C_12_p24_p33.c,313 :: 		
0x06BA	0xEF2218  	CLR	I2C2STAT
;__Lib_I2C_12_p24_p33.c,315 :: 		
0x06BC	0x07FF05  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle
;__Lib_I2C_12_p24_p33.c,317 :: 		
0x06BE	0x07FEFF  	RCALL	_Delay_1us
;__Lib_I2C_12_p24_p33.c,319 :: 		
L_end_I2C2_Init:
0x06C0	0xFA8000  	ULNK
0x06C2	0x060000  	RETURN
; end of _I2C2_Init
__Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle:
0x04C8	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,214 :: 		
;__Lib_I2C_12_p24_p33.c,216 :: 		
L___Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle23:
0x04CA	0x07FEAC  	RCALL	_I2C2_Is_Idle
0x04CC	0xE20000  	CP0	W0
0x04CE	0x3A0001  	BRA NZ	L___Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle24
L___Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle65:
;__Lib_I2C_12_p24_p33.c,217 :: 		
0x04D0	0x37FFFC  	BRA	L___Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle23
L___Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle24:
;__Lib_I2C_12_p24_p33.c,218 :: 		
L_end_I2C2_Wait_For_Idle:
0x04D2	0xFA8000  	ULNK
0x04D4	0x060000  	RETURN
; end of __Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle
_I2C2_Is_Idle:
0x0224	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,205 :: 		
;__Lib_I2C_12_p24_p33.c,207 :: 		
0x0226	0xEF6002  	CLR.B	W1
0x0228	0xAF0216  	BTSC	I2C2CON, #0
0x022A	0xEC6002  	INC.B	W1
0x022C	0xEF6000  	CLR.B	W0
0x022E	0xAF4216  	BTSC	I2C2CON, #2
0x0230	0xEC6000  	INC.B	W0
0x0232	0xFB8081  	ZE	W1, W1
0x0234	0xFB8000  	ZE	W0, W0
0x0236	0x708080  	IOR	W1, W0, W1
0x0238	0xEF6000  	CLR.B	W0
0x023A	0xAF6216  	BTSC	I2C2CON, #3
0x023C	0xEC6000  	INC.B	W0
0x023E	0xFB8000  	ZE	W0, W0
0x0240	0x708080  	IOR	W1, W0, W1
0x0242	0xEF6000  	CLR.B	W0
0x0244	0xAF8216  	BTSC	I2C2CON, #4
0x0246	0xEC6000  	INC.B	W0
0x0248	0xFB8000  	ZE	W0, W0
0x024A	0x708080  	IOR	W1, W0, W1
;__Lib_I2C_12_p24_p33.c,208 :: 		
0x024C	0xEF6000  	CLR.B	W0
0x024E	0xAF2216  	BTSC	I2C2CON, #1
0x0250	0xEC6000  	INC.B	W0
0x0252	0xFB8000  	ZE	W0, W0
0x0254	0x708080  	IOR	W1, W0, W1
0x0256	0xEF6000  	CLR.B	W0
0x0258	0xAFC219  	BTSC	I2C2STAT, #14
0x025A	0xEC6000  	INC.B	W0
0x025C	0xFB8000  	ZE	W0, W0
0x025E	0x708000  	IOR	W1, W0, W0
;__Lib_I2C_12_p24_p33.c,210 :: 		
0x0260	0xE20000  	CP0	W0
0x0262	0xEF6000  	CLR.B	W0
0x0264	0x3A0001  	BRA NZ	L__I2C2_Is_Idle63
0x0266	0xEC6000  	INC.B	W0
L__I2C2_Is_Idle63:
0x0268	0xFB8000  	ZE	W0, W0
;__Lib_I2C_12_p24_p33.c,211 :: 		
L_end_I2C2_Is_Idle:
0x026A	0xFA8000  	ULNK
0x026C	0x060000  	RETURN
; end of _I2C2_Is_Idle
_Delay_1us:
;__Lib_Delays.c,380 :: 		void Delay_1us()
;__Lib_Delays.c,382 :: 		Delay_us(1);
0x04BE	0x000000  	NOP
0x04C0	0x000000  	NOP
0x04C2	0x000000  	NOP
0x04C4	0x000000  	NOP
;__Lib_Delays.c,383 :: 		}
L_end_Delay_1us:
0x04C6	0x060000  	RETURN
; end of _Delay_1us
_color_3_init:
0x06C4	0xFA001A  	LNK	#26
;color_3.c,94 :: 		void color_3_init( uint8_t address )
;color_3.c,96 :: 		uint8_t buffer[ 20 ]    = { TCS3771_CONTROL_PDIODE_IR };
0x06C6	0x781F8A  	PUSH	W10
0x06C8	0x781F8B  	PUSH	W11
0x06CA	0x781F8C  	PUSH	W12
0x06CC	0x781F8D  	PUSH	W13
0x06CE	0x4700E0  	ADD	W14, #0, W1
0x06D0	0x280AC0  	MOV	#lo_addr(?ICScolor_3_init_buffer_L0), W0
0x06D2	0x090014  	REPEAT	#20
0x06D4	0x7858B0  	MOV.B	[W0++], [W1++]
;color_3.c,97 :: 		cmd_type_t type = NORMAL_TYPE;
;color_3.c,99 :: 		color_3_hal_init( address, 1 );
0x06D6	0xB3C01B  	MOV.B	#1, W11
0x06D8	0x07FE24  	RCALL	_color_3_hal_init
;color_3.c,101 :: 		color_3_hal_write( buffer, TCS3771_CONTROL, 1, type );
0x06DA	0x470060  	ADD	W14, #0, W0
0x06DC	0x980F40  	MOV	W0, [W14+24]
0x06DE	0x9056CE  	MOV.B	[W14+20], W13
0x06E0	0x20001C  	MOV	#1, W12
0x06E2	0xB3C0FB  	MOV.B	#15, W11
0x06E4	0x780500  	MOV	W0, W10
0x06E6	0x07FE30  	RCALL	_color_3_hal_write
;color_3.c,103 :: 		buffer[0] = 0x00;
0x06E8	0x4700E0  	ADD	W14, #0, W1
0x06EA	0xEF2000  	CLR	W0
0x06EC	0x784880  	MOV.B	W0, [W1]
;color_3.c,104 :: 		color_3_hal_write( buffer, TCS3771_PPULSE, 1, type );
0x06EE	0x90084E  	MOV	[W14+24], W0
0x06F0	0x9056CE  	MOV.B	[W14+20], W13
0x06F2	0x20001C  	MOV	#1, W12
0x06F4	0xB3C0EB  	MOV.B	#14, W11
0x06F6	0x780500  	MOV	W0, W10
0x06F8	0x07FE27  	RCALL	_color_3_hal_write
;color_3.c,106 :: 		buffer[0] = 216;
0x06FA	0x4700E0  	ADD	W14, #0, W1
0x06FC	0xB3CD80  	MOV.B	#216, W0
0x06FE	0x784880  	MOV.B	W0, [W1]
;color_3.c,107 :: 		color_3_hal_write( buffer, TCS3771_WTIME, 1, type );
0x0700	0x90084E  	MOV	[W14+24], W0
0x0702	0x9056CE  	MOV.B	[W14+20], W13
0x0704	0x20001C  	MOV	#1, W12
0x0706	0xB3C03B  	MOV.B	#3, W11
0x0708	0x780500  	MOV	W0, W10
0x070A	0x07FE1E  	RCALL	_color_3_hal_write
;color_3.c,109 :: 		buffer[0] = 0x01;
0x070C	0x4700E0  	ADD	W14, #0, W1
0x070E	0xB3C010  	MOV.B	#1, W0
0x0710	0x784880  	MOV.B	W0, [W1]
;color_3.c,110 :: 		buffer[1] = 0x30;
0x0712	0x90094E  	MOV	[W14+24], W2
0x0714	0x4100E1  	ADD	W2, #1, W1
0x0716	0xB3C300  	MOV.B	#48, W0
0x0718	0x784880  	MOV.B	W0, [W1]
;color_3.c,111 :: 		buffer[2] = 0x01;
0x071A	0x4100E2  	ADD	W2, #2, W1
0x071C	0xB3C010  	MOV.B	#1, W0
0x071E	0x784880  	MOV.B	W0, [W1]
;color_3.c,112 :: 		buffer[3] = 0x70;
0x0720	0x4100E3  	ADD	W2, #3, W1
0x0722	0xB3C700  	MOV.B	#112, W0
0x0724	0x784880  	MOV.B	W0, [W1]
;color_3.c,113 :: 		color_3_hal_write( buffer, TCS3771_PILT, 4, type );
0x0726	0x9056CE  	MOV.B	[W14+20], W13
0x0728	0x20004C  	MOV	#4, W12
0x072A	0xB3C08B  	MOV.B	#8, W11
0x072C	0x780502  	MOV	W2, W10
0x072E	0x07FE0C  	RCALL	_color_3_hal_write
;color_3.c,115 :: 		buffer[0] = 0x01;
0x0730	0x4700E0  	ADD	W14, #0, W1
0x0732	0xB3C010  	MOV.B	#1, W0
0x0734	0x784880  	MOV.B	W0, [W1]
;color_3.c,116 :: 		buffer[1] = 0x30;
0x0736	0x90094E  	MOV	[W14+24], W2
0x0738	0x4100E1  	ADD	W2, #1, W1
0x073A	0xB3C300  	MOV.B	#48, W0
0x073C	0x784880  	MOV.B	W0, [W1]
;color_3.c,117 :: 		buffer[2] = 0x01;
0x073E	0x4100E2  	ADD	W2, #2, W1
0x0740	0xB3C010  	MOV.B	#1, W0
0x0742	0x784880  	MOV.B	W0, [W1]
;color_3.c,118 :: 		buffer[3] = 0x70;
0x0744	0x4100E3  	ADD	W2, #3, W1
0x0746	0xB3C700  	MOV.B	#112, W0
0x0748	0x784880  	MOV.B	W0, [W1]
;color_3.c,119 :: 		color_3_hal_write( buffer, TCS3771_AILT, 4, type );
0x074A	0x9056CE  	MOV.B	[W14+20], W13
0x074C	0x20004C  	MOV	#4, W12
0x074E	0xB3C04B  	MOV.B	#4, W11
0x0750	0x780502  	MOV	W2, W10
0x0752	0x07FDFA  	RCALL	_color_3_hal_write
;color_3.c,121 :: 		buffer[0] = TCS3771_PERS_PPERS(10);
0x0754	0x4700E0  	ADD	W14, #0, W1
0x0756	0xB3CA00  	MOV.B	#160, W0
0x0758	0x784880  	MOV.B	W0, [W1]
;color_3.c,122 :: 		color_3_hal_write( buffer, TCS3771_PERS, 1, type );
0x075A	0x90084E  	MOV	[W14+24], W0
0x075C	0x9056CE  	MOV.B	[W14+20], W13
0x075E	0x20001C  	MOV	#1, W12
0x0760	0xB3C0CB  	MOV.B	#12, W11
0x0762	0x780500  	MOV	W0, W10
0x0764	0x07FDF1  	RCALL	_color_3_hal_write
;color_3.c,124 :: 		buffer[0] = TCS3771_ENABLE_PON | TCS3771_ENABLE_PEN | TCS3771_ENABLE_WEN | TCS3771_ENABLE_AEN | TCS3771_ENABLE_PIEN | TCS3771_ENABLE_AIEN;
0x0766	0x4700E0  	ADD	W14, #0, W1
0x0768	0xB3C3F0  	MOV.B	#63, W0
0x076A	0x784880  	MOV.B	W0, [W1]
;color_3.c,125 :: 		color_3_hal_write( buffer, TCS3771_ENABLE, 1, type );
0x076C	0x90084E  	MOV	[W14+24], W0
0x076E	0x9056CE  	MOV.B	[W14+20], W13
0x0770	0x20001C  	MOV	#1, W12
0x0772	0xEF2016  	CLR	W11
0x0774	0x780500  	MOV	W0, W10
0x0776	0x07FDE8  	RCALL	_color_3_hal_write
;color_3.c,128 :: 		color_3_hal_write( buffer, 0, 0, type );
0x0778	0x470060  	ADD	W14, #0, W0
0x077A	0xEF201A  	CLR	W13
0x077C	0xEF2018  	CLR	W12
0x077E	0xEF2016  	CLR	W11
0x0780	0x780500  	MOV	W0, W10
0x0782	0x07FDE2  	RCALL	_color_3_hal_write
;color_3.c,130 :: 		type = NORMAL_TYPE;
0x0784	0xB3C010  	MOV.B	#1, W0
0x0786	0x985740  	MOV.B	W0, [W14+20]
;color_3.c,131 :: 		buffer[0] = 252;
0x0788	0x4700E0  	ADD	W14, #0, W1
0x078A	0xB3CFC0  	MOV.B	#252, W0
0x078C	0x784880  	MOV.B	W0, [W1]
;color_3.c,132 :: 		color_3_hal_write( buffer, TCS3771_ATIME, 1, type );
0x078E	0x90084E  	MOV	[W14+24], W0
0x0790	0x9056CE  	MOV.B	[W14+20], W13
0x0792	0x20001C  	MOV	#1, W12
0x0794	0xB3C01B  	MOV.B	#1, W11
0x0796	0x780500  	MOV	W0, W10
0x0798	0x07FDD7  	RCALL	_color_3_hal_write
;color_3.c,134 :: 		buffer[0] = 254;
0x079A	0x4700E0  	ADD	W14, #0, W1
0x079C	0xB3CFE0  	MOV.B	#254, W0
0x079E	0x784880  	MOV.B	W0, [W1]
;color_3.c,135 :: 		color_3_hal_write( buffer, TCS3771_PTIME, 1, type );
0x07A0	0x90084E  	MOV	[W14+24], W0
0x07A2	0x9056CE  	MOV.B	[W14+20], W13
0x07A4	0x20001C  	MOV	#1, W12
0x07A6	0xB3C02B  	MOV.B	#2, W11
0x07A8	0x780500  	MOV	W0, W10
0x07AA	0x07FDCE  	RCALL	_color_3_hal_write
;color_3.c,136 :: 		}
L_end_color_3_init:
0x07AC	0x7806CF  	POP	W13
0x07AE	0x78064F  	POP	W12
0x07B0	0x7805CF  	POP	W11
0x07B2	0x78054F  	POP	W10
0x07B4	0xFA8000  	ULNK
0x07B6	0x060000  	RETURN
; end of _color_3_init
_color_3_hal_init:
;color_3_hal.c,135 :: 		void color_3_hal_init( uint8_t address_id, uint8_t command_size )
;color_3_hal.c,190 :: 		is_idle_i2c_p               = I2C2_Is_Idle;
0x0322	0x202240  	MOV	#lo_addr(_I2C2_Is_Idle), W0
0x0324	0x884530  	MOV	W0, color_3_hal_is_idle_i2c_p
;color_3_hal.c,191 :: 		start_i2c_p                 = I2C2_Start;
0x0326	0x2028C0  	MOV	#lo_addr(_I2C2_Start), W0
0x0328	0x884520  	MOV	W0, color_3_hal_start_i2c_p
;color_3_hal.c,192 :: 		stop_i2c_p                  = I2C2_Stop;
0x032A	0x202D80  	MOV	#lo_addr(_I2C2_Stop), W0
0x032C	0x8844F0  	MOV	W0, color_3_hal_stop_i2c_p
;color_3_hal.c,193 :: 		restart_i2c_p               = I2C2_Restart;
0x032E	0x202EC0  	MOV	#lo_addr(_I2C2_Restart), W0
0x0330	0x8844E0  	MOV	W0, color_3_hal_restart_i2c_p
;color_3_hal.c,194 :: 		write_i2c_p                 = I2C2_Write;
0x0332	0x202C20  	MOV	#lo_addr(_I2C2_Write), W0
0x0334	0x884500  	MOV	W0, color_3_hal_write_i2c_p
;color_3_hal.c,195 :: 		read_i2c_p                  = I2C2_Read;
0x0336	0x205E60  	MOV	#lo_addr(_I2C2_Read), W0
0x0338	0x884510  	MOV	W0, color_3_hal_read_i2c_p
;color_3_hal.c,216 :: 		_i2c_hw_address             = ( address_id << 1 );
0x033A	0xFB800A  	ZE	W10, W0
0x033C	0xDD00C1  	SL	W0, #1, W1
0x033E	0x208930  	MOV	#lo_addr(color_3_hal__i2c_hw_address), W0
0x0340	0x784801  	MOV.B	W1, [W0]
;color_3_hal.c,219 :: 		_cmd_size = command_size;
0x0342	0x2087C0  	MOV	#lo_addr(color_3_hal__cmd_size), W0
0x0344	0x78480B  	MOV.B	W11, [W0]
;color_3_hal.c,220 :: 		}
L_end_color_3_hal_init:
0x0346	0x060000  	RETURN
; end of _color_3_hal_init
_color_3_hal_write:
0x0348	0xFA0016  	LNK	#22
;color_3_hal.c,222 :: 		void color_3_hal_write( uint8_t *buffer, uint8_t reg, uint16_t count, cmd_type_t type )
;color_3_hal.c,224 :: 		uint8_t ptr[20] = { 0 };
0x034A	0x781F8A  	PUSH	W10
0x034C	0x781F8B  	PUSH	W11
0x034E	0x4700E0  	ADD	W14, #0, W1
0x0350	0x280C10  	MOV	#lo_addr(?ICScolor_3_hal_write_ptr_L0), W0
0x0352	0x090013  	REPEAT	#19
0x0354	0x7858B0  	MOV.B	[W0++], [W1++]
;color_3_hal.c,225 :: 		uint8_t i = 0;
;color_3_hal.c,227 :: 		if ( type == NORMAL_TYPE )
0x0356	0xE16C61  	CP.B	W13, #1
0x0358	0x3A0006  	BRA NZ	L_color_3_hal_write0
L__color_3_hal_write14:
;color_3_hal.c,228 :: 		ptr[0] = TCS3771_COMMAND_SELECT | TCS3771_COMMAND_TYPE_AUTOINC | reg;
0x035A	0x470160  	ADD	W14, #0, W2
0x035C	0x200A01  	MOV	#160, W1
0x035E	0xFB800B  	ZE	W11, W0
0x0360	0x708000  	IOR	W1, W0, W0
0x0362	0x784900  	MOV.B	W0, [W2]
0x0364	0x370005  	BRA	L_color_3_hal_write1
L_color_3_hal_write0:
;color_3_hal.c,229 :: 		else if ( type == SPECIAL_TYPE )
0x0366	0xE16C60  	CP.B	W13, #0
0x0368	0x3A0003  	BRA NZ	L_color_3_hal_write2
L__color_3_hal_write15:
;color_3_hal.c,230 :: 		ptr[0] = TCS3771_COMMAND_SELECT | TCS3771_COMMAND_TYPE_SPECIAL | 0x07;
0x036A	0x4700E0  	ADD	W14, #0, W1
0x036C	0xB3CE70  	MOV.B	#231, W0
0x036E	0x784880  	MOV.B	W0, [W1]
L_color_3_hal_write2:
L_color_3_hal_write1:
;color_3_hal.c,232 :: 		memcpy( &ptr[ 1 ], buffer, count );
0x0370	0x470060  	ADD	W14, #0, W0
0x0372	0xEC2000  	INC	W0
0x0374	0x781F8C  	PUSH	W12
0x0376	0x78058A  	MOV	W10, W11
0x0378	0x780500  	MOV	W0, W10
0x037A	0x07FF79  	RCALL	_memcpy
0x037C	0x78064F  	POP	W12
;color_3_hal.c,234 :: 		count += 1;
0x037E	0x460061  	ADD	W12, #1, W0
0x0380	0x780600  	MOV	W0, W12
;color_3_hal.c,274 :: 		i = 0;
0x0382	0xEF2000  	CLR	W0
0x0384	0x985740  	MOV.B	W0, [W14+20]
;color_3_hal.c,275 :: 		start_i2c_p();
0x0386	0x804520  	MOV	color_3_hal_start_i2c_p, W0
0x0388	0x781F8C  	PUSH	W12
0x038A	0x010000  	CALL	W0
;color_3_hal.c,276 :: 		write_i2c_p( _i2c_hw_address | WRITE_BIT );
0x038C	0x208930  	MOV	#lo_addr(color_3_hal__i2c_hw_address), W0
0x038E	0xFB8010  	ZE	[W0], W0
0x0390	0x784500  	MOV.B	W0, W10
0x0392	0x804500  	MOV	color_3_hal_write_i2c_p, W0
0x0394	0x010000  	CALL	W0
0x0396	0x78064F  	POP	W12
;color_3_hal.c,277 :: 		if ( count > 1 )
0x0398	0xE16061  	CP	W12, #1
0x039A	0x360015  	BRA LEU	L_color_3_hal_write3
L__color_3_hal_write16:
;color_3_hal.c,279 :: 		while ( count-- )
L_color_3_hal_write4:
0x039C	0x78008C  	MOV	W12, W1
0x039E	0x560061  	SUB	W12, #1, W0
0x03A0	0x780600  	MOV	W0, W12
0x03A2	0xE20002  	CP0	W1
0x03A4	0x32000F  	BRA Z	L_color_3_hal_write5
L__color_3_hal_write17:
;color_3_hal.c,280 :: 		write_i2c_p( ptr[i++] );
0x03A6	0x4700E0  	ADD	W14, #0, W1
0x03A8	0x470074  	ADD	W14, #20, W0
0x03AA	0xFB8010  	ZE	[W0], W0
0x03AC	0x408000  	ADD	W1, W0, W0
0x03AE	0xBE9F8C  	PUSH.D	W12
0x03B0	0xBE9F8A  	PUSH.D	W10
0x03B2	0x784510  	MOV.B	[W0], W10
0x03B4	0x804500  	MOV	color_3_hal_write_i2c_p, W0
0x03B6	0x010000  	CALL	W0
0x03B8	0xBE054F  	POP.D	W10
0x03BA	0xBE064F  	POP.D	W12
0x03BC	0x9050CE  	MOV.B	[W14+20], W1
0x03BE	0x470074  	ADD	W14, #20, W0
0x03C0	0x40C861  	ADD.B	W1, #1, [W0]
0x03C2	0x37FFEC  	BRA	L_color_3_hal_write4
L_color_3_hal_write5:
;color_3_hal.c,282 :: 		}
0x03C4	0x370006  	BRA	L_color_3_hal_write6
L_color_3_hal_write3:
;color_3_hal.c,283 :: 		else if ( count == 1 )
0x03C6	0xE16061  	CP	W12, #1
0x03C8	0x3A0004  	BRA NZ	L_color_3_hal_write7
L__color_3_hal_write18:
;color_3_hal.c,284 :: 		write_i2c_p( ptr[0] );
0x03CA	0x470060  	ADD	W14, #0, W0
0x03CC	0x784510  	MOV.B	[W0], W10
0x03CE	0x804500  	MOV	color_3_hal_write_i2c_p, W0
0x03D0	0x010000  	CALL	W0
L_color_3_hal_write7:
L_color_3_hal_write6:
;color_3_hal.c,286 :: 		stop_i2c_p();
0x03D2	0x8044F0  	MOV	color_3_hal_stop_i2c_p, W0
0x03D4	0xBE9F8C  	PUSH.D	W12
0x03D6	0xBE9F8A  	PUSH.D	W10
0x03D8	0x010000  	CALL	W0
0x03DA	0xBE054F  	POP.D	W10
0x03DC	0xBE064F  	POP.D	W12
;color_3_hal.c,288 :: 		}
L_end_color_3_hal_write:
0x03DE	0x7805CF  	POP	W11
0x03E0	0x78054F  	POP	W10
0x03E2	0xFA8000  	ULNK
0x03E4	0x060000  	RETURN
; end of _color_3_hal_write
_memcpy:
0x026E	0xFA0000  	LNK	#0
;__Lib_CString.c,44 :: 		
;__Lib_CString.c,48 :: 		
; ss start address is: 4 (W2)
0x0270	0x78010B  	MOV	W11, W2
;__Lib_CString.c,49 :: 		
; dd start address is: 6 (W3)
0x0272	0x78018A  	MOV	W10, W3
; dd end address is: 6 (W3)
; ss end address is: 4 (W2)
;__Lib_CString.c,50 :: 		
L_memcpy7:
; dd start address is: 6 (W3)
; ss start address is: 4 (W2)
0x0274	0x78008C  	MOV	W12, W1
0x0276	0x560061  	SUB	W12, #1, W0
0x0278	0x780600  	MOV	W0, W12
0x027A	0xE20002  	CP0	W1
0x027C	0x320004  	BRA Z	L_memcpy8
L__memcpy113:
;__Lib_CString.c,51 :: 		
0x027E	0x784992  	MOV.B	[W2], [W3]
0x0280	0xEC2006  	INC	W3
0x0282	0xEC2004  	INC	W2
; dd end address is: 6 (W3)
; ss end address is: 4 (W2)
0x0284	0x37FFF7  	BRA	L_memcpy7
L_memcpy8:
;__Lib_CString.c,53 :: 		
0x0286	0x78000A  	MOV	W10, W0
;__Lib_CString.c,54 :: 		
L_end_memcpy:
0x0288	0xFA8000  	ULNK
0x028A	0x060000  	RETURN
; end of _memcpy
_I2C2_Start:
0x028C	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,222 :: 		
;__Lib_I2C_12_p24_p33.c,228 :: 		
; j start address is: 4 (W2)
0x028E	0xEF2004  	CLR	W2
; j end address is: 4 (W2)
L_I2C2_Start25:
; j start address is: 4 (W2)
0x0290	0x227100  	MOV	#10000, W0
0x0292	0xE11000  	CP	W2, W0
0x0294	0x3E0006  	BRA GTU	L_I2C2_Start26
L__I2C2_Start67:
;__Lib_I2C_12_p24_p33.c,229 :: 		
0x0296	0x07FFC6  	RCALL	_I2C2_Is_Idle
0x0298	0xE20000  	CP0	W0
0x029A	0x320001  	BRA Z	L_I2C2_Start28
L__I2C2_Start68:
;__Lib_I2C_12_p24_p33.c,230 :: 		
0x029C	0x370002  	BRA	L_I2C2_Start26
L_I2C2_Start28:
;__Lib_I2C_12_p24_p33.c,228 :: 		
0x029E	0xEC2004  	INC	W2
;__Lib_I2C_12_p24_p33.c,231 :: 		
0x02A0	0x37FFF7  	BRA	L_I2C2_Start25
L_I2C2_Start26:
;__Lib_I2C_12_p24_p33.c,233 :: 		
0x02A2	0x227110  	MOV	#10001, W0
0x02A4	0xE11000  	CP	W2, W0
0x02A6	0x390002  	BRA LTU	L_I2C2_Start29
L__I2C2_Start69:
; j end address is: 4 (W2)
;__Lib_I2C_12_p24_p33.c,234 :: 		
0x02A8	0x200FF0  	MOV	#255, W0
0x02AA	0x370003  	BRA	L_end_I2C2_Start
L_I2C2_Start29:
;__Lib_I2C_12_p24_p33.c,236 :: 		
0x02AC	0xA80216  	BSET	I2C2CON, #0
;__Lib_I2C_12_p24_p33.c,237 :: 		
0x02AE	0x07FFA8  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Is_Finished
;__Lib_I2C_12_p24_p33.c,238 :: 		
0x02B0	0xEF2000  	CLR	W0
;__Lib_I2C_12_p24_p33.c,240 :: 		
L_end_I2C2_Start:
0x02B2	0xFA8000  	ULNK
0x02B4	0x060000  	RETURN
; end of _I2C2_Start
__Lib_I2C_12_p24_p33_I2C2_Is_Finished:
0x0200	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,197 :: 		
;__Lib_I2C_12_p24_p33.c,198 :: 		
L___Lib_I2C_12_p24_p33_I2C2_Is_Finished21:
0x0202	0xAF408A  	BTSC	IFS3, #2
0x0204	0x370001  	BRA	L___Lib_I2C_12_p24_p33_I2C2_Is_Finished22
;__Lib_I2C_12_p24_p33.c,199 :: 		
0x0206	0x37FFFD  	BRA	L___Lib_I2C_12_p24_p33_I2C2_Is_Finished21
L___Lib_I2C_12_p24_p33_I2C2_Is_Finished22:
;__Lib_I2C_12_p24_p33.c,200 :: 		
0x0208	0xA9408A  	BCLR	IFS3, #2
;__Lib_I2C_12_p24_p33.c,201 :: 		
L_end_I2C2_Is_Finished:
0x020A	0xFA8000  	ULNK
0x020C	0x060000  	RETURN
; end of __Lib_I2C_12_p24_p33_I2C2_Is_Finished
_UART1_Read:
0x020E	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,92 :: 		
;__Lib_UART_12_p24_p33.c,93 :: 		
0x0210	0x000000  	NOP
;__Lib_UART_12_p24_p33.c,94 :: 		
0x0212	0x000000  	NOP
;__Lib_UART_12_p24_p33.c,95 :: 		
0x0214	0xBF8226  	MOV	U1RXREG, WREG
;__Lib_UART_12_p24_p33.c,96 :: 		
L_end_UART1_Read:
0x0216	0xFA8000  	ULNK
0x0218	0x060000  	RETURN
; end of _UART1_Read
_UART1_Data_Ready:
0x021A	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,87 :: 		
;__Lib_UART_12_p24_p33.c,88 :: 		
0x021C	0xBF8222  	MOV	U1STA, WREG
0x021E	0x600061  	AND	W0, #1, W0
;__Lib_UART_12_p24_p33.c,90 :: 		
L_end_UART1_Data_Ready:
0x0220	0xFA8000  	ULNK
0x0222	0x060000  	RETURN
; end of _UART1_Data_Ready
_UART1_Tx_Idle:
0x02B6	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,139 :: 		
;__Lib_UART_12_p24_p33.c,140 :: 		
0x02B8	0xEF2000  	CLR	W0
0x02BA	0xAF0223  	BTSC	U1STA, #8
0x02BC	0xEC2000  	INC	W0
;__Lib_UART_12_p24_p33.c,141 :: 		
L_end_UART1_Tx_Idle:
0x02BE	0xFA8000  	ULNK
0x02C0	0x060000  	RETURN
; end of _UART1_Tx_Idle
_UART2_Read:
0x0300	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,327 :: 		
;__Lib_UART_12_p24_p33.c,328 :: 		
0x0302	0x000000  	NOP
;__Lib_UART_12_p24_p33.c,329 :: 		
0x0304	0x000000  	NOP
;__Lib_UART_12_p24_p33.c,330 :: 		
0x0306	0xBF8236  	MOV	U2RXREG, WREG
;__Lib_UART_12_p24_p33.c,331 :: 		
L_end_UART2_Read:
0x0308	0xFA8000  	ULNK
0x030A	0x060000  	RETURN
; end of _UART2_Read
_UART2_Data_Ready:
0x030C	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,322 :: 		
;__Lib_UART_12_p24_p33.c,323 :: 		
0x030E	0xBF8232  	MOV	U2STA, WREG
0x0310	0x600061  	AND	W0, #1, W0
;__Lib_UART_12_p24_p33.c,325 :: 		
L_end_UART2_Data_Ready:
0x0312	0xFA8000  	ULNK
0x0314	0x060000  	RETURN
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
0x0316	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,374 :: 		
;__Lib_UART_12_p24_p33.c,375 :: 		
0x0318	0xEF2000  	CLR	W0
0x031A	0xAF0233  	BTSC	U2STA, #8
0x031C	0xEC2000  	INC	W0
;__Lib_UART_12_p24_p33.c,376 :: 		
L_end_UART2_Tx_Idle:
0x031E	0xFA8000  	ULNK
0x0320	0x060000  	RETURN
; end of _UART2_Tx_Idle
_I2C2_Write:
0x02C2	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,259 :: 		
;__Lib_I2C_12_p24_p33.c,260 :: 		
0x02C4	0xFB800A  	ZE	W10, W0
0x02C6	0xB7A212  	MOV	WREG, I2C2TRN
;__Lib_I2C_12_p24_p33.c,261 :: 		
0x02C8	0xAEE218  	BTSS	I2C2STAT, #7
0x02CA	0x370002  	BRA	L_I2C2_Write35
;__Lib_I2C_12_p24_p33.c,262 :: 		
0x02CC	0x200010  	MOV	#1, W0
0x02CE	0x370002  	BRA	L_end_I2C2_Write
L_I2C2_Write35:
;__Lib_I2C_12_p24_p33.c,264 :: 		
0x02D0	0x07FF97  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Is_Finished
;__Lib_I2C_12_p24_p33.c,266 :: 		
0x02D2	0xEF2000  	CLR	W0
;__Lib_I2C_12_p24_p33.c,267 :: 		
L_end_I2C2_Write:
0x02D4	0xFA8000  	ULNK
0x02D6	0x060000  	RETURN
; end of _I2C2_Write
_I2C2_Stop:
0x02D8	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,250 :: 		
;__Lib_I2C_12_p24_p33.c,251 :: 		
L_I2C2_Stop33:
0x02DA	0xBF8216  	MOV	I2C2CON, WREG
0x02DC	0x60007F  	AND	W0, #31, W0
0x02DE	0xE20000  	CP0	W0
0x02E0	0x320001  	BRA Z	L_I2C2_Stop34
L__I2C2_Stop73:
;__Lib_I2C_12_p24_p33.c,252 :: 		
0x02E2	0x37FFFB  	BRA	L_I2C2_Stop33
L_I2C2_Stop34:
;__Lib_I2C_12_p24_p33.c,254 :: 		
0x02E4	0xA84216  	BSET	I2C2CON, #2
;__Lib_I2C_12_p24_p33.c,255 :: 		
0x02E6	0x07FF8C  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Is_Finished
;__Lib_I2C_12_p24_p33.c,256 :: 		
L_end_I2C2_Stop:
0x02E8	0xFA8000  	ULNK
0x02EA	0x060000  	RETURN
; end of _I2C2_Stop
_I2C2_Restart:
0x02EC	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,242 :: 		
;__Lib_I2C_12_p24_p33.c,243 :: 		
L_I2C2_Restart31:
0x02EE	0xBF8206  	MOV	I2C1CON, WREG
0x02F0	0x60007F  	AND	W0, #31, W0
0x02F2	0xE20000  	CP0	W0
0x02F4	0x320001  	BRA Z	L_I2C2_Restart32
L__I2C2_Restart71:
;__Lib_I2C_12_p24_p33.c,244 :: 		
0x02F6	0x37FFFB  	BRA	L_I2C2_Restart31
L_I2C2_Restart32:
;__Lib_I2C_12_p24_p33.c,245 :: 		
0x02F8	0xA82216  	BSET	I2C2CON, #1
;__Lib_I2C_12_p24_p33.c,247 :: 		
0x02FA	0x07FF82  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Is_Finished
;__Lib_I2C_12_p24_p33.c,248 :: 		
L_end_I2C2_Restart:
0x02FC	0xFA8000  	ULNK
0x02FE	0x060000  	RETURN
; end of _I2C2_Restart
_color_3_hal_read:
0x0906	0xFA000E  	LNK	#14
;color_3_hal.c,290 :: 		void color_3_hal_read( uint8_t *buffer, uint8_t reg, uint8_t count )
;color_3_hal.c,292 :: 		uint8_t cnt  = _cmd_size;
0x0908	0x2087C0  	MOV	#lo_addr(color_3_hal__cmd_size), W0
0x090A	0x784010  	MOV.B	[W0], W0
0x090C	0x984700  	MOV.B	W0, [W14+0]
;color_3_hal.c,294 :: 		uint8_t read_reg_cmd[10] = { 0 };
0x090E	0x4700E4  	ADD	W14, #4, W1
0x0910	0x280F90  	MOV	#lo_addr(?ICScolor_3_hal_read_read_reg_cmd_L0), W0
0x0912	0x090009  	REPEAT	#9
0x0914	0x7858B0  	MOV.B	[W0++], [W1++]
;color_3_hal.c,296 :: 		read_reg_cmd[0] = TCS3771_COMMAND_SELECT | TCS3771_COMMAND_TYPE_AUTOINC | reg;
0x0916	0x470164  	ADD	W14, #4, W2
0x0918	0x200A01  	MOV	#160, W1
0x091A	0xFB800B  	ZE	W11, W0
0x091C	0x708000  	IOR	W1, W0, W0
0x091E	0x784900  	MOV.B	W0, [W2]
;color_3_hal.c,335 :: 		start_i2c_p();
0x0920	0x804520  	MOV	color_3_hal_start_i2c_p, W0
0x0922	0x781F8C  	PUSH	W12
0x0924	0x781F8A  	PUSH	W10
0x0926	0x010000  	CALL	W0
;color_3_hal.c,336 :: 		write_i2c_p( _i2c_hw_address | WRITE_BIT );
0x0928	0x208930  	MOV	#lo_addr(color_3_hal__i2c_hw_address), W0
0x092A	0xFB8010  	ZE	[W0], W0
0x092C	0x784500  	MOV.B	W0, W10
0x092E	0x804500  	MOV	color_3_hal_write_i2c_p, W0
0x0930	0x010000  	CALL	W0
0x0932	0x78054F  	POP	W10
0x0934	0x78064F  	POP	W12
;color_3_hal.c,338 :: 		while ( cnt-- )
L_color_3_hal_read8:
0x0936	0x90410E  	MOV.B	[W14+0], W2
0x0938	0x90408E  	MOV.B	[W14+0], W1
0x093A	0x470060  	ADD	W14, #0, W0
0x093C	0x50C861  	SUB.B	W1, #1, [W0]
0x093E	0xE24004  	CP0.B	W2
0x0940	0x320009  	BRA Z	L_color_3_hal_read9
L__color_3_hal_read20:
;color_3_hal.c,339 :: 		write_i2c_p( read_reg_cmd[0] );
0x0942	0x470064  	ADD	W14, #4, W0
0x0944	0x781F8C  	PUSH	W12
0x0946	0xBE9F8A  	PUSH.D	W10
0x0948	0x784510  	MOV.B	[W0], W10
0x094A	0x804500  	MOV	color_3_hal_write_i2c_p, W0
0x094C	0x010000  	CALL	W0
0x094E	0xBE054F  	POP.D	W10
0x0950	0x78064F  	POP	W12
0x0952	0x37FFF1  	BRA	L_color_3_hal_read8
L_color_3_hal_read9:
;color_3_hal.c,341 :: 		stop_i2c_p();
0x0954	0x8044F0  	MOV	color_3_hal_stop_i2c_p, W0
0x0956	0x781F8C  	PUSH	W12
0x0958	0xBE9F8A  	PUSH.D	W10
0x095A	0x010000  	CALL	W0
0x095C	0xBE054F  	POP.D	W10
;color_3_hal.c,343 :: 		ptr = buffer;
0x095E	0x98071A  	MOV	W10, [W14+2]
;color_3_hal.c,345 :: 		start_i2c_p();
0x0960	0x804520  	MOV	color_3_hal_start_i2c_p, W0
0x0962	0xBE9F8A  	PUSH.D	W10
0x0964	0x010000  	CALL	W0
;color_3_hal.c,346 :: 		write_i2c_p( _i2c_hw_address | READ_BIT );
0x0966	0x208930  	MOV	#lo_addr(color_3_hal__i2c_hw_address), W0
0x0968	0xFB8010  	ZE	[W0], W0
0x096A	0x700061  	IOR	W0, #1, W0
0x096C	0x784500  	MOV.B	W0, W10
0x096E	0x804500  	MOV	color_3_hal_write_i2c_p, W0
0x0970	0x010000  	CALL	W0
0x0972	0xBE054F  	POP.D	W10
0x0974	0x78064F  	POP	W12
;color_3_hal.c,348 :: 		while ( --count )
L_color_3_hal_read10:
0x0976	0x564061  	SUB.B	W12, #1, W0
0x0978	0x784600  	MOV.B	W0, W12
0x097A	0xE24018  	CP0.B	W12
0x097C	0x32000E  	BRA Z	L_color_3_hal_read11
L__color_3_hal_read21:
;color_3_hal.c,350 :: 		*ptr++ = read_i2c_p( ACK_BIT );
0x097E	0x2087B0  	MOV	#lo_addr(color_3_hal_ACK_BIT), W0
0x0980	0x781F8C  	PUSH	W12
0x0982	0xBE9F8A  	PUSH.D	W10
0x0984	0xFB8510  	ZE	[W0], W10
0x0986	0x804511  	MOV	color_3_hal_read_i2c_p, W1
0x0988	0x010001  	CALL	W1
0x098A	0xBE054F  	POP.D	W10
0x098C	0x78064F  	POP	W12
0x098E	0x90009E  	MOV	[W14+2], W1
0x0990	0x784880  	MOV.B	W0, [W1]
0x0992	0x90009E  	MOV	[W14+2], W1
0x0994	0x470062  	ADD	W14, #2, W0
0x0996	0x408861  	ADD	W1, #1, [W0]
;color_3_hal.c,351 :: 		}
0x0998	0x37FFEE  	BRA	L_color_3_hal_read10
L_color_3_hal_read11:
;color_3_hal.c,353 :: 		*ptr = read_i2c_p( NACK_BIT );
0x099A	0x2086D0  	MOV	#lo_addr(color_3_hal_NACK_BIT), W0
0x099C	0x781F8C  	PUSH	W12
0x099E	0xBE9F8A  	PUSH.D	W10
0x09A0	0xFB8510  	ZE	[W0], W10
0x09A2	0x804511  	MOV	color_3_hal_read_i2c_p, W1
0x09A4	0x010001  	CALL	W1
0x09A6	0x90009E  	MOV	[W14+2], W1
0x09A8	0x784880  	MOV.B	W0, [W1]
;color_3_hal.c,355 :: 		stop_i2c_p();
0x09AA	0x8044F0  	MOV	color_3_hal_stop_i2c_p, W0
0x09AC	0x010000  	CALL	W0
0x09AE	0xBE054F  	POP.D	W10
0x09B0	0x78064F  	POP	W12
;color_3_hal.c,357 :: 		}
L_end_color_3_hal_read:
0x09B2	0xFA8000  	ULNK
0x09B4	0x060000  	RETURN
; end of _color_3_hal_read
_I2C2_Read:
0x05E6	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,270 :: 		
;__Lib_I2C_12_p24_p33.c,271 :: 		
L_I2C2_Read36:
0x05E8	0xBF8216  	MOV	I2C2CON, WREG
0x05EA	0x60007F  	AND	W0, #31, W0
0x05EC	0xE20000  	CP0	W0
0x05EE	0x320001  	BRA Z	L_I2C2_Read37
L__I2C2_Read76:
;__Lib_I2C_12_p24_p33.c,272 :: 		
0x05F0	0x37FFFB  	BRA	L_I2C2_Read36
L_I2C2_Read37:
;__Lib_I2C_12_p24_p33.c,274 :: 		
0x05F2	0xA86216  	BSET	I2C2CON, #3
;__Lib_I2C_12_p24_p33.c,275 :: 		
0x05F4	0x07FE05  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Is_Finished
;__Lib_I2C_12_p24_p33.c,278 :: 		
L_I2C2_Read38:
0x05F6	0xBF8216  	MOV	I2C2CON, WREG
0x05F8	0x60007F  	AND	W0, #31, W0
0x05FA	0xE20000  	CP0	W0
0x05FC	0x320001  	BRA Z	L_I2C2_Read39
L__I2C2_Read77:
;__Lib_I2C_12_p24_p33.c,279 :: 		
0x05FE	0x37FFFB  	BRA	L_I2C2_Read38
L_I2C2_Read39:
;__Lib_I2C_12_p24_p33.c,283 :: 		
0x0600	0xE20014  	CP0	W10
0x0602	0x320002  	BRA Z	L_I2C2_Read40
L__I2C2_Read78:
;__Lib_I2C_12_p24_p33.c,284 :: 		
0x0604	0xA8A216  	BSET	I2C2CON, #5
;__Lib_I2C_12_p24_p33.c,285 :: 		
0x0606	0x370001  	BRA	L_I2C2_Read41
L_I2C2_Read40:
;__Lib_I2C_12_p24_p33.c,287 :: 		
0x0608	0xA9A216  	BCLR	I2C2CON, #5
;__Lib_I2C_12_p24_p33.c,288 :: 		
L_I2C2_Read41:
;__Lib_I2C_12_p24_p33.c,289 :: 		
0x060A	0xA88216  	BSET	I2C2CON, #4
;__Lib_I2C_12_p24_p33.c,290 :: 		
0x060C	0x07FDF9  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Is_Finished
;__Lib_I2C_12_p24_p33.c,293 :: 		
0x060E	0xBFC210  	MOV.B	I2C2RCV, WREG
;__Lib_I2C_12_p24_p33.c,294 :: 		
L_end_I2C2_Read:
0x0610	0xFA8000  	ULNK
0x0612	0x060000  	RETURN
; end of _I2C2_Read
_IntToHex:
0x086C	0xFA0000  	LNK	#0
;__Lib_Conversions.c,25 :: 		
;__Lib_Conversions.c,26 :: 		
0x086E	0x200143  	MOV	#lo_addr(W10), W3
0x0870	0x418061  	ADD	W3, #1, W0
0x0872	0x784010  	MOV.B	[W0], W0
0x0874	0xFB8000  	ZE	W0, W0
0x0876	0xDE0044  	LSR	W0, #4, W0
0x0878	0xFB8080  	ZE	W0, W1
0x087A	0x280E90  	MOV	#lo_addr(__Lib_Conversions_Digits), W0
0x087C	0x400081  	ADD	W0, W1, W1
0x087E	0x784011  	MOV.B	[W1], W0
0x0880	0x784D80  	MOV.B	W0, [W11]
;__Lib_Conversions.c,27 :: 		
0x0882	0x458161  	ADD	W11, #1, W2
0x0884	0x418061  	ADD	W3, #1, W0
0x0886	0xFB8010  	ZE	[W0], W0
0x0888	0x6000EF  	AND	W0, #15, W1
0x088A	0x280E90  	MOV	#lo_addr(__Lib_Conversions_Digits), W0
0x088C	0x400081  	ADD	W0, W1, W1
0x088E	0x784011  	MOV.B	[W1], W0
0x0890	0x784900  	MOV.B	W0, [W2]
;__Lib_Conversions.c,28 :: 		
0x0892	0x458162  	ADD	W11, #2, W2
0x0894	0xFB800A  	ZE	W10, W0
0x0896	0xDE0044  	LSR	W0, #4, W0
0x0898	0xFB8080  	ZE	W0, W1
0x089A	0x280E90  	MOV	#lo_addr(__Lib_Conversions_Digits), W0
0x089C	0x400081  	ADD	W0, W1, W1
0x089E	0x784011  	MOV.B	[W1], W0
0x08A0	0x784900  	MOV.B	W0, [W2]
;__Lib_Conversions.c,29 :: 		
0x08A2	0x458163  	ADD	W11, #3, W2
0x08A4	0xFB800A  	ZE	W10, W0
0x08A6	0x6000EF  	AND	W0, #15, W1
0x08A8	0x280E90  	MOV	#lo_addr(__Lib_Conversions_Digits), W0
0x08AA	0x400081  	ADD	W0, W1, W1
0x08AC	0x784011  	MOV.B	[W1], W0
0x08AE	0x784900  	MOV.B	W0, [W2]
;__Lib_Conversions.c,30 :: 		
0x08B0	0x4580E4  	ADD	W11, #4, W1
0x08B2	0xEF2000  	CLR	W0
0x08B4	0x784880  	MOV.B	W0, [W1]
;__Lib_Conversions.c,31 :: 		
L_end_IntToHex:
0x08B6	0xFA8000  	ULNK
0x08B8	0x060000  	RETURN
; end of _IntToHex
_color_3_get_rgb_data:
0x07B8	0xFA0016  	LNK	#22
;color_3.c,139 :: 		void color_3_get_rgb_data( color_t* color )
;color_3.c,141 :: 		uint8_t buffer[ 20 ] = { 0 };
0x07BA	0x781F8B  	PUSH	W11
0x07BC	0x781F8C  	PUSH	W12
0x07BE	0x4700E0  	ADD	W14, #0, W1
0x07C0	0x280D50  	MOV	#lo_addr(?ICScolor_3_get_rgb_data_buffer_L0), W0
0x07C2	0x090013  	REPEAT	#19
0x07C4	0x7858B0  	MOV.B	[W0++], [W1++]
;color_3.c,142 :: 		uint8_t uart_text[ 20 ] = { 0 };
;color_3.c,145 :: 		uint8_t count = 8;
;color_3.c,147 :: 		color_3_hal_read( buffer, TCS3771_CDATA, 8 );
0x07C6	0x470060  	ADD	W14, #0, W0
0x07C8	0x980F20  	MOV	W0, [W14+20]
0x07CA	0x781F8A  	PUSH	W10
0x07CC	0xB3C08C  	MOV.B	#8, W12
0x07CE	0xB3C14B  	MOV.B	#20, W11
0x07D0	0x780500  	MOV	W0, W10
0x07D2	0x070099  	RCALL	_color_3_hal_read
0x07D4	0x78054F  	POP	W10
;color_3.c,149 :: 		l_byte = buffer[0];
0x07D6	0x4700E0  	ADD	W14, #0, W1
;color_3.c,150 :: 		h_byte = buffer[1];
0x07D8	0x408061  	ADD	W1, #1, W0
;color_3.c,151 :: 		big_byte =  l_byte;
; big_byte start address is: 2 (W1)
0x07DA	0xFB8091  	ZE	[W1], W1
;color_3.c,152 :: 		big_byte |= (uint16_t)h_byte << 8;
0x07DC	0xFB8010  	ZE	[W0], W0
0x07DE	0xDD0048  	SL	W0, #8, W0
0x07E0	0x708D00  	IOR	W1, W0, [W10]
; big_byte end address is: 2 (W1)
;color_3.c,153 :: 		color->clear_data = big_byte;
;color_3.c,155 :: 		l_byte = buffer[2];
0x07E2	0x90092E  	MOV	[W14+20], W2
0x07E4	0x4100E2  	ADD	W2, #2, W1
;color_3.c,156 :: 		h_byte = buffer[3];
0x07E6	0x410063  	ADD	W2, #3, W0
;color_3.c,157 :: 		big_byte =  l_byte;
; big_byte start address is: 6 (W3)
0x07E8	0xFB8191  	ZE	[W1], W3
;color_3.c,158 :: 		big_byte |= (uint16_t)h_byte << 8;
0x07EA	0xFB8010  	ZE	[W0], W0
0x07EC	0xDD0048  	SL	W0, #8, W0
0x07EE	0x718080  	IOR	W3, W0, W1
; big_byte end address is: 6 (W3)
;color_3.c,159 :: 		color->red_data = big_byte;
0x07F0	0x450062  	ADD	W10, #2, W0
0x07F2	0x780801  	MOV	W1, [W0]
;color_3.c,161 :: 		l_byte = buffer[4];
0x07F4	0x4100E4  	ADD	W2, #4, W1
;color_3.c,162 :: 		h_byte = buffer[5];
0x07F6	0x410065  	ADD	W2, #5, W0
;color_3.c,163 :: 		big_byte =  l_byte;
; big_byte start address is: 6 (W3)
0x07F8	0xFB8191  	ZE	[W1], W3
;color_3.c,164 :: 		big_byte |= (uint16_t)h_byte << 8;
0x07FA	0xFB8010  	ZE	[W0], W0
0x07FC	0xDD0048  	SL	W0, #8, W0
0x07FE	0x718080  	IOR	W3, W0, W1
; big_byte end address is: 6 (W3)
;color_3.c,165 :: 		color->green_data = big_byte;
0x0800	0x450064  	ADD	W10, #4, W0
0x0802	0x780801  	MOV	W1, [W0]
;color_3.c,167 :: 		l_byte = buffer[6];
0x0804	0x4100E6  	ADD	W2, #6, W1
;color_3.c,168 :: 		h_byte = buffer[7];
0x0806	0x410067  	ADD	W2, #7, W0
;color_3.c,169 :: 		big_byte =  l_byte;
; big_byte start address is: 4 (W2)
0x0808	0xFB8111  	ZE	[W1], W2
;color_3.c,170 :: 		big_byte |= (uint16_t)h_byte << 8;
0x080A	0xFB8010  	ZE	[W0], W0
0x080C	0xDD0048  	SL	W0, #8, W0
0x080E	0x710080  	IOR	W2, W0, W1
; big_byte end address is: 4 (W2)
;color_3.c,171 :: 		color->blue_data = big_byte;
0x0810	0x450066  	ADD	W10, #6, W0
0x0812	0x780801  	MOV	W1, [W0]
;color_3.c,173 :: 		}
L_end_color_3_get_rgb_data:
0x0814	0x78064F  	POP	W12
0x0816	0x7805CF  	POP	W11
0x0818	0xFA8000  	ULNK
0x081A	0x060000  	RETURN
; end of _color_3_get_rgb_data
_IntToStr:
0x081C	0xFA0000  	LNK	#0
;__Lib_Conversions.c,146 :: 		
;__Lib_Conversions.c,152 :: 		
0x081E	0x781F8A  	PUSH	W10
; negative start address is: 8 (W4)
0x0820	0xEF2008  	CLR	W4
;__Lib_Conversions.c,153 :: 		
; inword start address is: 0 (W0)
0x0822	0x78000A  	MOV	W10, W0
;__Lib_Conversions.c,154 :: 		
0x0824	0xE15060  	CP	W10, #0
0x0826	0x3D0003  	BRA GE	L__IntToStr99
L__IntToStr133:
; inword end address is: 0 (W0)
;__Lib_Conversions.c,155 :: 		
0x0828	0x200014  	MOV	#1, W4
;__Lib_Conversions.c,156 :: 		
; inword start address is: 0 (W0)
0x082A	0x150060  	SUBR	W10, #0, W0
; inword end address is: 0 (W0)
; negative end address is: 8 (W4)
;__Lib_Conversions.c,157 :: 		
0x082C	0x370000  	BRA	L_IntToStr23
L__IntToStr99:
;__Lib_Conversions.c,154 :: 		
;__Lib_Conversions.c,157 :: 		
L_IntToStr23:
;__Lib_Conversions.c,158 :: 		
; inword start address is: 0 (W0)
; negative start address is: 8 (W4)
0x082E	0x780500  	MOV	W0, W10
; inword end address is: 0 (W0)
0x0830	0x07FEF1  	RCALL	_WordToStr
;__Lib_Conversions.c,160 :: 		
; i start address is: 6 (W3)
0x0832	0x200063  	MOV	#6, W3
; negative end address is: 8 (W4)
; i end address is: 6 (W3)
0x0834	0x780104  	MOV	W4, W2
;__Lib_Conversions.c,161 :: 		
L_IntToStr24:
; i start address is: 6 (W3)
; negative start address is: 4 (W2)
0x0836	0xE11860  	CP	W3, #0
0x0838	0x360006  	BRA LEU	L_IntToStr25
L__IntToStr134:
;__Lib_Conversions.c,162 :: 		
0x083A	0x458083  	ADD	W11, W3, W1
0x083C	0x518061  	SUB	W3, #1, W0
0x083E	0x458000  	ADD	W11, W0, W0
0x0840	0x784890  	MOV.B	[W0], [W1]
;__Lib_Conversions.c,163 :: 		
0x0842	0xED2006  	DEC	W3
;__Lib_Conversions.c,164 :: 		
; i end address is: 6 (W3)
0x0844	0x37FFF8  	BRA	L_IntToStr24
L_IntToStr25:
;__Lib_Conversions.c,165 :: 		
0x0846	0xB3C200  	MOV.B	#32, W0
0x0848	0x784D80  	MOV.B	W0, [W11]
;__Lib_Conversions.c,166 :: 		
0x084A	0xE20004  	CP0	W2
0x084C	0x32000C  	BRA Z	L_IntToStr26
L__IntToStr135:
; negative end address is: 4 (W2)
;__Lib_Conversions.c,167 :: 		
; i start address is: 4 (W2)
0x084E	0xEF2004  	CLR	W2
; i end address is: 4 (W2)
;__Lib_Conversions.c,168 :: 		
L_IntToStr27:
; i start address is: 4 (W2)
0x0850	0x458002  	ADD	W11, W2, W0
0x0852	0x784090  	MOV.B	[W0], W1
0x0854	0xB3C200  	MOV.B	#32, W0
0x0856	0xE10C00  	CP.B	W1, W0
0x0858	0x3A0002  	BRA NZ	L_IntToStr28
L__IntToStr136:
; i start address is: 4 (W2)
0x085A	0xEC2004  	INC	W2
; i end address is: 4 (W2)
0x085C	0x37FFF9  	BRA	L_IntToStr27
L_IntToStr28:
;__Lib_Conversions.c,169 :: 		
0x085E	0x510061  	SUB	W2, #1, W0
; i end address is: 4 (W2)
;__Lib_Conversions.c,170 :: 		
0x0860	0x458080  	ADD	W11, W0, W1
0x0862	0xB3C2D0  	MOV.B	#45, W0
0x0864	0x784880  	MOV.B	W0, [W1]
L_IntToStr26:
;__Lib_Conversions.c,171 :: 		
L_end_IntToStr:
0x0866	0x78054F  	POP	W10
0x0868	0xFA8000  	ULNK
0x086A	0x060000  	RETURN
; end of _IntToStr
_WordToStr:
0x0614	0xFA0002  	LNK	#2
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
; len start address is: 4 (W2)
0x0616	0xEF2004  	CLR	W2
; len end address is: 4 (W2)
L_WordToStr6:
; len start address is: 4 (W2)
0x0618	0xE11465  	CP.B	W2, #5
0x061A	0x310006  	BRA GEU	L_WordToStr7
L__WordToStr122:
;__Lib_Conversions.c,90 :: 		
0x061C	0xFB8002  	ZE	W2, W0
0x061E	0x458080  	ADD	W11, W0, W1
0x0620	0xB3C200  	MOV.B	#32, W0
0x0622	0x784880  	MOV.B	W0, [W1]
;__Lib_Conversions.c,89 :: 		
0x0624	0xEC6004  	INC.B	W2
;__Lib_Conversions.c,90 :: 		
0x0626	0x37FFF8  	BRA	L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x0628	0xFB8002  	ZE	W2, W0
0x062A	0x458080  	ADD	W11, W0, W1
0x062C	0xEF2000  	CLR	W0
0x062E	0x784880  	MOV.B	W0, [W1]
; len start address is: 6 (W3)
0x0630	0x5141E1  	SUB.B	W2, #1, W3
; len end address is: 4 (W2)
; len end address is: 6 (W3)
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
; len start address is: 6 (W3)
0x0632	0xFB8003  	ZE	W3, W0
0x0634	0x458000  	ADD	W11, W0, W0
0x0636	0x980700  	MOV	W0, [W14+0]
0x0638	0x2000A2  	MOV	#10, W2
0x063A	0x090011  	REPEAT	#17
0x063C	0xD88502  	DIV.U	W10, W2
0x063E	0x200300  	MOV	#48, W0
0x0640	0x408080  	ADD	W1, W0, W1
0x0642	0x90000E  	MOV	[W14+0], W0
0x0644	0x784801  	MOV.B	W1, [W0]
;__Lib_Conversions.c,95 :: 		
0x0646	0x2000A2  	MOV	#10, W2
0x0648	0x090011  	REPEAT	#17
0x064A	0xD88502  	DIV.U	W10, W2
0x064C	0x780500  	MOV	W0, W10
;__Lib_Conversions.c,96 :: 		
0x064E	0xE10060  	CP	W0, #0
0x0650	0x3A0001  	BRA NZ	L_WordToStr11
L__WordToStr123:
; len end address is: 6 (W3)
;__Lib_Conversions.c,97 :: 		
0x0652	0x370002  	BRA	L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
; len start address is: 6 (W3)
0x0654	0xED6006  	DEC.B	W3
;__Lib_Conversions.c,99 :: 		
; len end address is: 6 (W3)
0x0656	0x37FFED  	BRA	L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x0658	0xFA8000  	ULNK
0x065A	0x060000  	RETURN
; end of _WordToStr
0x0A8C	0x208001  	MOV	#lo_addr(?lstr5_Color_3_dsPIC), W1
0x0A8E	0x280000  	MOV	#32768, W0
0x0A90	0x090048  	REPEAT	#72
0x0A92	0x7818B0  	MOV	[W0++], [W1++]
0x0A94	0x7858B0  	MOV.B	[W0++], [W1++]
0x0A96	0x060000  	RETURN
;,0 :: _initBlock_0 [16]
; Containing: ?ICS?lstr5_Color_3_dsPIC [13]
;             ?ICS?lstr4_Color_3_dsPIC [3]
0x8000	0x6552 ;_initBlock_0+0 : ?ICS?lstr5_Color_3_dsPIC at 0x8000
0x8002	0x2064 ;_initBlock_0+2
0x8004	0x6144 ;_initBlock_0+4
0x8006	0x6174 ;_initBlock_0+6
0x8008	0x203A ;_initBlock_0+8
0x800A	0x2020 ;_initBlock_0+10
0x800C	0x0D00 ;_initBlock_0+12 : ?ICS?lstr4_Color_3_dsPIC at 0x800D
0x800E	0x000A ;_initBlock_0+14
; end of _initBlock_0
;,0 :: _initBlock_1 [26]
; Containing: ?ICS?lstr1_Color_3_dsPIC [13]
;             ?ICS?lstr3_Color_3_dsPIC [13]
0x8010	0x6544 ;_initBlock_1+0 : ?ICS?lstr1_Color_3_dsPIC at 0x8010
0x8012	0x6976 ;_initBlock_1+2
0x8014	0x6563 ;_initBlock_1+4
0x8016	0x4920 ;_initBlock_1+6
0x8018	0x3A44 ;_initBlock_1+8
0x801A	0x2020 ;_initBlock_1+10
0x801C	0x4300 ;_initBlock_1+12 : ?ICS?lstr3_Color_3_dsPIC at 0x801D
0x801E	0x656C ;_initBlock_1+14
0x8020	0x7261 ;_initBlock_1+16
0x8022	0x4420 ;_initBlock_1+18
0x8024	0x7461 ;_initBlock_1+20
0x8026	0x3A61 ;_initBlock_1+22
0x8028	0x0020 ;_initBlock_1+24
; end of _initBlock_1
;Color_3_dsPIC.c,0 :: ?ICS?lstr12_Color_3_dsPIC [18]
0x802A	0x3249 ;?ICS?lstr12_Color_3_dsPIC+0
0x802C	0x2043 ;?ICS?lstr12_Color_3_dsPIC+2
0x802E	0x6E49 ;?ICS?lstr12_Color_3_dsPIC+4
0x8030	0x7469 ;?ICS?lstr12_Color_3_dsPIC+6
0x8032	0x6169 ;?ICS?lstr12_Color_3_dsPIC+8
0x8034	0x696C ;?ICS?lstr12_Color_3_dsPIC+10
0x8036	0x657A ;?ICS?lstr12_Color_3_dsPIC+12
0x8038	0x0D64 ;?ICS?lstr12_Color_3_dsPIC+14
0x803A	0x000A ;?ICS?lstr12_Color_3_dsPIC+16
; end of ?ICS?lstr12_Color_3_dsPIC
;Color_3_dsPIC.c,0 :: ?ICS?lstr13_Color_3_dsPIC [22]
0x803C	0x6F43 ;?ICS?lstr13_Color_3_dsPIC+0
0x803E	0x6F6C ;?ICS?lstr13_Color_3_dsPIC+2
0x8040	0x2072 ;?ICS?lstr13_Color_3_dsPIC+4
0x8042	0x2033 ;?ICS?lstr13_Color_3_dsPIC+6
0x8044	0x6E49 ;?ICS?lstr13_Color_3_dsPIC+8
0x8046	0x7469 ;?ICS?lstr13_Color_3_dsPIC+10
0x8048	0x6169 ;?ICS?lstr13_Color_3_dsPIC+12
0x804A	0x696C ;?ICS?lstr13_Color_3_dsPIC+14
0x804C	0x657A ;?ICS?lstr13_Color_3_dsPIC+16
0x804E	0x0D64 ;?ICS?lstr13_Color_3_dsPIC+18
0x8050	0x000A ;?ICS?lstr13_Color_3_dsPIC+20
; end of ?ICS?lstr13_Color_3_dsPIC
;,0 :: _initBlock_4 [20]
; Containing: ?ICS?lstr11_Color_3_dsPIC [19]
;             ?ICS__i2c_address [1]
0x8052	0x4155 ;_initBlock_4+0 : ?ICS?lstr11_Color_3_dsPIC at 0x8052
0x8054	0x5452 ;_initBlock_4+2
0x8056	0x4920 ;_initBlock_4+4
0x8058	0x696E ;_initBlock_4+6
0x805A	0x6974 ;_initBlock_4+8
0x805C	0x6C61 ;_initBlock_4+10
0x805E	0x7A69 ;_initBlock_4+12
0x8060	0x6465 ;_initBlock_4+14
0x8062	0x0A0D ;_initBlock_4+16
0x8064	0x2900 ;_initBlock_4+18 : ?ICS__i2c_address at 0x8065
; end of _initBlock_4
;,0 :: _initBlock_5 [8]
; Containing: ?ICS?lstr2_Color_3_dsPIC [7]
;             ?ICScolor_3_hal_NACK_BIT [1]
0x8066	0x0A0D ;_initBlock_5+0 : ?ICS?lstr2_Color_3_dsPIC at 0x8066
0x8068	0x0A0D ;_initBlock_5+2
0x806A	0x0A0D ;_initBlock_5+4
0x806C	0x0100 ;_initBlock_5+6 : ?ICScolor_3_hal_NACK_BIT at 0x806D
; end of _initBlock_5
;,0 :: _initBlock_6 [14]
; Containing: ?ICS?lstr7_Color_3_dsPIC [13]
;             ?ICScolor_3_hal_ACK_BIT [1]
0x806E	0x7247 ;_initBlock_6+0 : ?ICS?lstr7_Color_3_dsPIC at 0x806E
0x8070	0x6565 ;_initBlock_6+2
0x8072	0x206E ;_initBlock_6+4
0x8074	0x6144 ;_initBlock_6+6
0x8076	0x6174 ;_initBlock_6+8
0x8078	0x203A ;_initBlock_6+10
0x807A	0x0000 ;_initBlock_6+12 : ?ICScolor_3_hal_ACK_BIT at 0x807B
; end of _initBlock_6
;,0 :: _initBlock_7 [4]
; Containing: ?ICScolor_3_hal__cmd_size [1]
;             ?ICS?lstr10_Color_3_dsPIC [3]
0x807C	0x0D01 ;_initBlock_7+0 : ?ICScolor_3_hal__cmd_size at 0x807C : ?ICS?lstr10_Color_3_dsPIC at 0x807D
0x807E	0x000A ;_initBlock_7+2
; end of _initBlock_7
;,0 :: _initBlock_8 [16]
; Containing: ?ICS?lstr9_Color_3_dsPIC [13]
;             ?ICS?lstr6_Color_3_dsPIC [3]
0x8080	0x6C42 ;_initBlock_8+0 : ?ICS?lstr9_Color_3_dsPIC at 0x8080
0x8082	0x6575 ;_initBlock_8+2
0x8084	0x4420 ;_initBlock_8+4
0x8086	0x7461 ;_initBlock_8+6
0x8088	0x3A61 ;_initBlock_8+8
0x808A	0x2020 ;_initBlock_8+10
0x808C	0x0D00 ;_initBlock_8+12 : ?ICS?lstr6_Color_3_dsPIC at 0x808D
0x808E	0x000A ;_initBlock_8+14
; end of _initBlock_8
;,0 :: _initBlock_9 [28]
; Containing: ?ICS?lstr8_Color_3_dsPIC [3]
;             ?ICSmain_uart_text_L0 [25]
0x8090	0x0A0D ;_initBlock_9+0 : ?ICS?lstr8_Color_3_dsPIC at 0x8090
0x8092	0x0000 ;_initBlock_9+2 : ?ICSmain_uart_text_L0 at 0x8093
0x8094	0x0000 ;_initBlock_9+4
0x8096	0x0000 ;_initBlock_9+6
0x8098	0x0000 ;_initBlock_9+8
0x809A	0x0000 ;_initBlock_9+10
0x809C	0x0000 ;_initBlock_9+12
0x809E	0x0000 ;_initBlock_9+14
0x80A0	0x0000 ;_initBlock_9+16
0x80A2	0x0000 ;_initBlock_9+18
0x80A4	0x0000 ;_initBlock_9+20
0x80A6	0x0000 ;_initBlock_9+22
0x80A8	0x0000 ;_initBlock_9+24
0x80AA	0x0000 ;_initBlock_9+26
; end of _initBlock_9
;color_3.c,0 :: ?ICScolor_3_init_buffer_L0 [20]
0x80AC	0x0020 ;?ICScolor_3_init_buffer_L0+0
0x80AE	0x0000 ;?ICScolor_3_init_buffer_L0+2
0x80B0	0x0000 ;?ICScolor_3_init_buffer_L0+4
0x80B2	0x0000 ;?ICScolor_3_init_buffer_L0+6
0x80B4	0x0000 ;?ICScolor_3_init_buffer_L0+8
0x80B6	0x0000 ;?ICScolor_3_init_buffer_L0+10
0x80B8	0x0000 ;?ICScolor_3_init_buffer_L0+12
0x80BA	0x0000 ;?ICScolor_3_init_buffer_L0+14
0x80BC	0x0000 ;?ICScolor_3_init_buffer_L0+16
0x80BE	0x0000 ;?ICScolor_3_init_buffer_L0+18
; end of ?ICScolor_3_init_buffer_L0
;,0 :: _initBlock_11 [73]
; Containing: ?ICScolor_3_init_type_L0 [1]
;             ?ICScolor_3_hal_write_ptr_L0 [20]
;             ?ICScolor_3_get_rgb_data_buffer_L0 [20]
;             Digits [16]
;             ?ICScolor_3_hal_read_read_reg_cmd_L0 [10]
;             ?ICSmain_id_buffer_L0 [6]
0x80C0	0x0001 ;_initBlock_11+0 : ?ICScolor_3_init_type_L0 at 0x80C0 : ?ICScolor_3_hal_write_ptr_L0 at 0x80C1
0x80C2	0x0000 ;_initBlock_11+2
0x80C4	0x0000 ;_initBlock_11+4
0x80C6	0x0000 ;_initBlock_11+6
0x80C8	0x0000 ;_initBlock_11+8
0x80CA	0x0000 ;_initBlock_11+10
0x80CC	0x0000 ;_initBlock_11+12
0x80CE	0x0000 ;_initBlock_11+14
0x80D0	0x0000 ;_initBlock_11+16
0x80D2	0x0000 ;_initBlock_11+18
0x80D4	0x0000 ;_initBlock_11+20 : ?ICScolor_3_get_rgb_data_buffer_L0 at 0x80D5
0x80D6	0x0000 ;_initBlock_11+22
0x80D8	0x0000 ;_initBlock_11+24
0x80DA	0x0000 ;_initBlock_11+26
0x80DC	0x0000 ;_initBlock_11+28
0x80DE	0x0000 ;_initBlock_11+30
0x80E0	0x0000 ;_initBlock_11+32
0x80E2	0x0000 ;_initBlock_11+34
0x80E4	0x0000 ;_initBlock_11+36
0x80E6	0x0000 ;_initBlock_11+38
0x80E8	0x3000 ;_initBlock_11+40 : Digits at 0x80E9
0x80EA	0x3231 ;_initBlock_11+42
0x80EC	0x3433 ;_initBlock_11+44
0x80EE	0x3635 ;_initBlock_11+46
0x80F0	0x3837 ;_initBlock_11+48
0x80F2	0x4139 ;_initBlock_11+50
0x80F4	0x4342 ;_initBlock_11+52
0x80F6	0x4544 ;_initBlock_11+54
0x80F8	0x0046 ;_initBlock_11+56 : ?ICScolor_3_hal_read_read_reg_cmd_L0 at 0x80F9
0x80FA	0x0000 ;_initBlock_11+58
0x80FC	0x0000 ;_initBlock_11+60
0x80FE	0x0000 ;_initBlock_11+62
0x8100	0x0000 ;_initBlock_11+64
0x8102	0x0000 ;_initBlock_11+66 : ?ICSmain_id_buffer_L0 at 0x8103
0x8104	0x0000 ;_initBlock_11+68
0x8106	0x0000 ;_initBlock_11+70
0x8108	0x00 ;_initBlock_11+72
; end of _initBlock_11
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0200      [14]    __Lib_I2C_12_p24_p33_I2C2_Is_Finished
0x020E      [12]    _UART1_Read
0x021A      [10]    _UART1_Data_Ready
0x0224      [74]    _I2C2_Is_Idle
0x026E      [30]    _memcpy
0x028C      [42]    _I2C2_Start
0x02B6      [12]    _UART1_Tx_Idle
0x02C2      [22]    _I2C2_Write
0x02D8      [20]    _I2C2_Stop
0x02EC      [20]    _I2C2_Restart
0x0300      [12]    _UART2_Read
0x030C      [10]    _UART2_Data_Ready
0x0316      [12]    _UART2_Tx_Idle
0x0322      [38]    _color_3_hal_init
0x0348     [158]    _color_3_hal_write
0x03E6      [18]    __Multiply_32x32
0x03F8      [88]    __Modulus_32x32
0x0450      [82]    __Divide_32x32
0x04A2       [6]    _Get_Fosc_kHz
0x04A8       [4]    _Get_Fosc_Per_Cyc
0x04AC      [18]    _Delay_100ms
0x04BE      [10]    _Delay_1us
0x04C8      [14]    __Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle
0x04D6      [14]    _UART2_Write
0x04E4     [258]    _UART2_Init
0x05E6      [46]    _I2C2_Read
0x0614      [72]    _WordToStr
0x065C      [34]    _UART2_Write_Text
0x067E      [70]    _I2C2_Init
0x06C4     [244]    _color_3_init
0x07B8     [100]    _color_3_get_rgb_data
0x081C      [80]    _IntToStr
0x086C      [78]    _IntToHex
0x08BA      [76]    _system_setup
0x0906     [176]    _color_3_hal_read
0x09B6     [214]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0216       [2]    I2C2CON
0x008A       [2]    IFS3
0x0210       [2]    I2C2RCV
0x0214       [2]    I2C2BRG
0x0206       [2]    I2C1CON
0x0218       [2]    I2C2STAT
0x0212       [2]    I2C2TRN
0x0894       [2]    _UART_Wr_Ptr
0x0226       [2]    U1RXREG
0x0238       [2]    U2BRG
0x0222       [2]    U1STA
0x0236       [2]    U2RXREG
0x0234       [2]    U2TXREG
0x0896       [2]    _UART_Rdy_Ptr
0x0898       [2]    _UART_Rd_Ptr
0x089A       [2]    _UART_Tx_Idle_Ptr
0x0232       [2]    U2STA
0x0230       [2]    U2MODE
0x089C       [2]    color_3_hal_restart_i2c_p
0x089E       [2]    color_3_hal_stop_i2c_p
0x08A0       [2]    color_3_hal_write_i2c_p
0x0893       [1]    color_3_hal__i2c_hw_address
0x08A2       [2]    color_3_hal_read_i2c_p
0x08A4       [2]    color_3_hal_start_i2c_p
0x08A6       [2]    color_3_hal_is_idle_i2c_p
0x0800      [13]    ?lstr5_Color_3_dsPIC
0x080D       [3]    ?lstr4_Color_3_dsPIC
0x0810      [13]    ?lstr1_Color_3_dsPIC
0x081D      [13]    ?lstr3_Color_3_dsPIC
0x082A      [18]    ?lstr12_Color_3_dsPIC
0x083C      [22]    ?lstr13_Color_3_dsPIC
0x0852      [19]    ?lstr11_Color_3_dsPIC
0x0865       [1]    __i2c_address
0x0866       [7]    ?lstr2_Color_3_dsPIC
0x086D       [1]    color_3_hal_NACK_BIT
0x086E      [13]    ?lstr7_Color_3_dsPIC
0x087B       [1]    color_3_hal_ACK_BIT
0x087C       [1]    color_3_hal__cmd_size
0x087D       [3]    ?lstr10_Color_3_dsPIC
0x0880      [13]    ?lstr9_Color_3_dsPIC
0x088D       [3]    ?lstr6_Color_3_dsPIC
0x0890       [3]    ?lstr8_Color_3_dsPIC
0x008A       [2]    IFS3
0x0206       [2]    I2C1CON
0x0210       [2]    I2C2RCV
0x0212       [2]    I2C2TRN
0x0214       [2]    I2C2BRG
0x0216       [2]    I2C2CON
0x0218       [2]    I2C2STAT
0x0222       [2]    U1STA
0x0226       [2]    U1RXREG
0x0230       [2]    U2MODE
0x0232       [2]    U2STA
0x0234       [2]    U2TXREG
0x0236       [2]    U2RXREG
0x0238       [2]    U2BRG
0x0014       [2]    FARG_memcpy_d1
0x0016       [2]    FARG_memcpy_s1
0x0018       [2]    FARG_memcpy_n
0x0014       [1]    FARG_I2C2_Write_data_
0x0014       [1]    FARG_color_3_hal_init_address_id
0x0016       [1]    FARG_color_3_hal_init_command_size
0x0014       [2]    FARG_color_3_hal_write_buffer
0x0016       [1]    FARG_color_3_hal_write_reg
0x0018       [2]    FARG_color_3_hal_write_count
0x001A       [1]    FARG_color_3_hal_write_type
0x0014       [2]    FARG_UART2_Write__data
0x0014       [4]    FARG_UART2_Init_baud_rate
0x0014       [2]    FARG_I2C2_Read_ack
0x0014       [2]    FARG_WordToStr_input
0x0016       [2]    FARG_WordToStr_output
0x0014       [2]    FARG_UART2_Write_Text_uart_text
0x0014       [4]    FARG_I2C2_Init_scl
0x0014       [1]    FARG_color_3_init_address
0x0014       [2]    FARG_color_3_get_rgb_data_color
0x0014       [2]    FARG_IntToStr_input
0x0016       [2]    FARG_IntToStr_output
0x0014       [2]    FARG_IntToHex_input
0x0016       [2]    FARG_IntToHex_output
0x0014       [2]    FARG_color_3_hal_read_buffer
0x0016       [1]    FARG_color_3_hal_read_reg
0x0018       [1]    FARG_color_3_hal_read_count
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x8000      [13]    ?ICS?lstr5_Color_3_dsPIC
0x800D       [3]    ?ICS?lstr4_Color_3_dsPIC
0x8010      [13]    ?ICS?lstr1_Color_3_dsPIC
0x801D      [13]    ?ICS?lstr3_Color_3_dsPIC
0x802A      [18]    ?ICS?lstr12_Color_3_dsPIC
0x803C      [22]    ?ICS?lstr13_Color_3_dsPIC
0x8052      [19]    ?ICS?lstr11_Color_3_dsPIC
0x8065       [1]    ?ICS__i2c_address
0x8066       [7]    ?ICS?lstr2_Color_3_dsPIC
0x806D       [1]    ?ICScolor_3_hal_NACK_BIT
0x806E      [13]    ?ICS?lstr7_Color_3_dsPIC
0x807B       [1]    ?ICScolor_3_hal_ACK_BIT
0x807C       [1]    ?ICScolor_3_hal__cmd_size
0x807D       [3]    ?ICS?lstr10_Color_3_dsPIC
0x8080      [13]    ?ICS?lstr9_Color_3_dsPIC
0x808D       [3]    ?ICS?lstr6_Color_3_dsPIC
0x8090       [3]    ?ICS?lstr8_Color_3_dsPIC
0x8093      [25]    ?ICSmain_uart_text_L0
0x80AC      [20]    ?ICScolor_3_init_buffer_L0
0x80C0       [1]    ?ICScolor_3_init_type_L0
0x80C1      [20]    ?ICScolor_3_hal_write_ptr_L0
0x80D5      [20]    ?ICScolor_3_get_rgb_data_buffer_L0
0x80E9      [16]    __Lib_Conversions_Digits
0x80F9      [10]    ?ICScolor_3_hal_read_read_reg_cmd_L0
0x8103       [6]    ?ICSmain_id_buffer_L0
